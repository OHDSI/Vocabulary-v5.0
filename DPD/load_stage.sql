/**************************************************************************
* Copyright 2016 Observational Health Data Sciences and Informatics (OHDSI)
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
* Authors: Anna Ostropolets
* Date: 2017
**************************************************************************/

-- create backup tables 

-- truncate old tables
TRUNCATE TABLE DRUG_CONCEPT_STAGE;
TRUNCATE TABLE DS_STAGE;
TRUNCATE TABLE INTERNAL_RELATIONSHIP_STAGE;
TRUNCATE TABLE RELATIONSHIP_TO_CONCEPT;
TRUNCATE TABLE PC_STAGE;

--set latest update
BEGIN
   DEVV5.VOCABULARY_PACK.SetLatestUpdate (pVocabularyName        => 'DPD',
                                          pVocabularyDate        => TRUNC(sysdate),
                                          pVocabularyVersion     => 'DPD '||sysdate,
                                          pVocabularyDevSchema   => 'DEV_DPD');
   DEVV5.VOCABULARY_PACK.SetLatestUpdate (pVocabularyName        => 'RxNorm Extension',
                                          pVocabularyDate        => TRUNC(sysdate),
                                          pVocabularyVersion     => 'RxNorm Extension '||sysdate,
                                          pVocabularyDevSchema   => 'DEV_DPD',
                                          pAppendVocabulary      => TRUE);            
END;
/
COMMIT;

--use obvious classes to extract non_drugs
CREATE TABLE non_drug 
AS
(SELECT *
FROM (SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION, CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS,AI_GROUP_NO,' ' AS INVALID_REASON
      FROM (SELECT * FROM drug_ia
            UNION ALL
            SELECT * FROM drug_act
            UNION ALL
            SELECT * FROM drug_ap))
WHERE UPPER(class) IN ('DISINFECTANT','VETERINARY','RADIOPHARMACEUTICAL'));

--cosmetics: creams,sun protectors etc.
INSERT INTO non_drug
SELECT *
  FROM (SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION, CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS,AI_GROUP_NO,' ' AS INVALID_REASON
      FROM (SELECT * FROM drug_ia
            UNION ALL
            SELECT * FROM drug_act
            UNION ALL
            SELECT * FROM drug_ap))
  WHERE REGEXP_LIKE (brand_name,'FLOSS|ANTIPERSPIRANT|JOHNSON|MAKEUP|WRINKLE|NIVEA|ANTISEPTIQ|MAKE UP|BLEMISH|MAKE-UP|DEODORANT|\sLIP\s|\sSPF|SPF\s|SUNSCREEN|SUNCARE|MOISTURIZER|ANTIPERS|MOISTURIZING| CLEAR |WASH|SOAP|CATTLE|FOR DOGS|FOR CATS|BANANA|AVON|AVEENO')
  OR PRODUCT_CATEGORIZATION IN ('CAT IV - SUNBURN PROTECTANTS','CAT IV - MED. SKIN CARE PROD./SUNBURN PROTECTANTS','CAT IV - ANTIPERSPIRANTS');

--hemodyalisis, antiseptics, cosmetics (split a query into 2)
INSERT INTO non_drug
SELECT *
  FROM (SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION, CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS,AI_GROUP_NO,' ' AS INVALID_REASON
      FROM (SELECT * FROM drug_ia
            UNION ALL
            SELECT * FROM drug_act
            UNION ALL
            SELECT * FROM drug_ap))
  WHERE REGEXP_LIKE (brand_name,'CATHETERIZATION| VENOUS |BIKINI|SANITIZER| SUN BLOCK|SKIN CLEANER|MOISTURE|SKIN CLEANSER| POUDRE|SPORTWEAR|DIALYSIS|SOLAIRE|DISCOLORATION|HAEMODIALYSIS|HAND SCRUB|SUNSCREEN|REVITALIZING|TRANSLUCENT|ANTIBACTERIAL|ANTIMICROBIAL| DRINK|MEDICATED BODY POWDER|CLEANSING|ANTISEPTIC|SHISEIDO|DISINFECTANT| TAPE ')
  OR PRODUCT_CATEGORIZATION IN ('CAT IV - SUNBURN PROTECTANTS','CAT IV - MED. SKIN CARE PROD./SUNBURN PROTECTANTS','CAT IV - ANTIPERSPIRANTS');
--under consideration:  'CAT IV - ANTIDANDRUFF PRODUCTS', 

--use route that indicate non_drugs
INSERT INTO non_drug
SELECT dp.*
  FROM (SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION, CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS,AI_GROUP_NO,' ' AS INVALID_REASON
      FROM (SELECT * FROM drug_ia
            UNION ALL
            SELECT * FROM drug_act
            UNION ALL
            SELECT * FROM drug_ap)) dp 
  JOIN (SELECT * FROM route_ia 
        UNION ALL 
        SELECT * FROM route_act
        UNION ALL 
        SELECT * FROM route_ap) r 
  ON r.drug_code = dp.old_code
  WHERE REGEXP_LIKE (route_of_administration,'HOSPITAL|COMMERCIAL|DIALYSIS|UDDER WASH|ARTHOGRAPHY|HOUSEHOLD|LABORATORY|DISINFECTANT|CYSTOGRAPHY'); 

--contrast media
INSERT INTO non_drug
SELECT dp.*
  FROM (SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION, CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS,AI_GROUP_NO,' ' AS INVALID_REASON
      FROM (SELECT * FROM drug_ia
            UNION ALL
            SELECT * FROM drug_act
            UNION ALL
            SELECT * FROM drug_ap)) dp  
      JOIN (SELECT * FROM active_ingredients_ia
            UNION ALL
            SELECT * FROM active_ingredients_act
            UNION ALL
            SELECT * FROM active_ingredients_ap) ai 
      ON dp.old_code = ai.drug_code
WHERE ingredient IN (
'BARIUM SULFATE','IOHEXOL','IODIXANOL','IOXAGLATE MEGLUMINE','CYANOCOBALAMIN CO 57','IOXAGLATE SODIUM','IOVERSOL','IOTROLAN','IOPYDONE','IOPYDOL','IOTHALAMATE SODIUM','URANIUM NITRATE','IOTHALAMATE MEGLUMINE','IOPROMIDE','IOPANOIC ACID','IOPAMIDOL','DIATRIZOATE MEGLUMINE','DIATRIZOATE SODIUM','X-RAY','XENON 133 XE');
--other non_drugs
INSERT INTO non_drug
SELECT dp.*
  FROM (SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION, CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS,AI_GROUP_NO,' ' AS INVALID_REASON
      FROM (SELECT * FROM drug_ia
            UNION ALL
            SELECT * FROM drug_act
            UNION ALL
            SELECT * FROM drug_ap)) dp  
      JOIN (SELECT * FROM active_ingredients_ia
            UNION ALL
            SELECT * FROM active_ingredients_act
            UNION ALL
            SELECT * FROM active_ingredients_ap) ai 
      ON dp.old_code = ai.drug_code
WHERE ingredient IN ('WIESBADEN','HUMAN PLASMA','HEMOGLOBIN (CRYSTALS ETC.)','MUSCLE (EXTRACT)','MASSA FERMENTATA MEDICINALIS','ANIMAL EXT HOMEOPATHIC');


----use drug forms that indicate non_drugs
INSERT INTO non_drug
SELECT dp.*
  FROM (SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION, CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS,AI_GROUP_NO,' ' AS INVALID_REASON
      FROM (SELECT * FROM drug_ia
            UNION ALL
            SELECT * FROM drug_act
            UNION ALL
            SELECT * FROM drug_ap)) dp 
      JOIN (SELECT * FROM form_ia 
            UNION ALL 
            SELECT * FROM form_act
            UNION ALL 
            SELECT * FROM form_ap) f ON cast(f.drug_code as varchar(255)) = dp.old_code
  WHERE pharmaceutical_form IN ('STICK','WIPE','SWAB','FLOSS','CORD','BLOOD COLLECTION'); 
CREATE TABLE drug_product 
AS
(SELECT DRUG_CODE AS OLD_CODE,PRODUCT_CATEGORIZATION,CLASS,LTRIM(DRUG_IDENTIFICATION_NUMBER,'0') AS DRUG_CODE,BRAND_NAME,DESCRIPTOR,PEDIATRIC_FLAG,ACCESSION_NUMBER,NUMBER_OF_AIS, AI_GROUP_NO,
       CASE
         WHEN DRUG_IDENTIFICATION_NUMBER IN (SELECT DRUG_IDENTIFICATION_NUMBER FROM drug_ia) THEN 'D'
         ELSE NULL
       END AS INVALID_REASON
  FROM (SELECT * FROM drug_ia
      UNION ALL
      SELECT * FROM drug_act
      UNION ALL
      SELECT * FROM drug_ap)
      );

UPDATE drug_product
SET brand_name = REGEXP_REPLACE (brand_name,'"');

--non drug 
DELETE drug_product
WHERE drug_code IN (SELECT drug_code FROM non_drug);

DELETE drug_product
WHERE ROWID NOT IN (SELECT MIN(ROWID) FROM drug_product GROUP BY drug_code);

CREATE TABLE active_ingredients 
AS
(SELECT b.DRUG_CODE,ACTIVE_INGREDIENT_CODE,INGREDIENT,STRENGTH,STRENGTH_UNIT,STRENGTH_TYPE,DOSAGE_VALUE,DOSAGE_UNIT,NOTES
  FROM (SELECT * FROM active_ingredients_ia
      UNION ALL
      SELECT * FROM active_ingredients_act
      UNION ALL
      SELECT * FROM active_ingredients_ap) a
 JOIN drug_product b ON old_code = a.drug_Code);

UPDATE active_ingredients
SET ingredient= REGEXP_REPLACE (ingredient,'"');

update active_ingredients
set DOSAGE_UNIT=
case when NOTES like '%TAB%' then 'TAB'
     when NOTES like '%CAP%' then 'CAP'
     else null end
where drug_code in ('763047','690082');

--  update original data to remove inaccuracy (googled the drugs)
UPDATE ACTIVE_INGREDIENTS   SET DOSAGE_UNIT = 'G' WHERE DRUG_CODE = '2237089' AND   INGREDIENT = 'POTASSIUM (POTASSIUM CARBONATE)';
UPDATE ACTIVE_INGREDIENTS   SET DOSAGE_UNIT = 'ML'WHERE DRUG_CODE = '42676' AND   INGREDIENT = 'NEOMYCIN (NEOMYCIN SULFATE)';
UPDATE ACTIVE_INGREDIENTS   SET DOSAGE_UNIT = 'G' WHERE DRUG_CODE = '358177' AND   INGREDIENT = 'NEOMYCIN (NEOMYCIN SULFATE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '0.1',       STRENGTH_UNIT = '%' WHERE DRUG_CODE = '2023326' AND   INGREDIENT = 'EPINEPHRINE';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH_UNIT = 'MG',       DOSAGE_UNIT = 'G' WHERE DRUG_CODE = '358177' AND   INGREDIENT = 'DEXAMETHASONE';

--homeopathy
UPDATE ACTIVE_INGREDIENTS   SET DOSAGE_UNIT = NULL, DOSAGE_VALUE=NULL WHERE DRUG_CODE in ('2232194','2232560','2233721','2233291','711470');
UPDATE ACTIVE_INGREDIENTS   SET DOSAGE_UNIT = 'ML', DOSAGE_VALUE=NULL  WHERE DRUG_CODE in ('1927841','2232643','2232626','2232604','2232583','2232582');
UPDATE ACTIVE_INGREDIENTS   SET DOSAGE_VALUE = '',       DOSAGE_UNIT = '' WHERE DRUG_CODE = '2238526';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '',       STRENGTH_UNIT = ''  ,     DOSAGE_UNIT = '' WHERE DRUG_CODE = '2211017';

UPDATE active_ingredients
SET ingredient = 'VITAMIN D' WHERE ingredient = 'VITAMIN D (DEXPANTHENOL)';

UPDATE active_ingredients 
SET dosage_value = null,dosage_unit = null WHERE drug_code = '2239121';

UPDATE active_ingredients 
SET ingredient = 'Melphalan' WHERE ingredient = 'BUFFER SOLUTION';

DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '1900609' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '1901109' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '1901117' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '2231701' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '678961' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '839167' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '849863' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE DRUG_CODE = '899917' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXAL-5-PHOSPHATE)';
DELETE FROM ACTIVE_INGREDIENTS WHERE   INGREDIENT = 'SURFACTANT-ASSOCIATED PROTEINS SP-B AND SP-C';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '27.5' WHERE DRUG_CODE = '2245464' AND   INGREDIENT = 'PHOSPHOLIPID';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '50' WHERE DRUG_CODE = '1900609' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '5' WHERE DRUG_CODE = '1901109' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '125' WHERE DRUG_CODE = '1901117' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '31.6' WHERE DRUG_CODE = '2231701' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '31' WHERE DRUG_CODE = '678961' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '12.5' WHERE DRUG_CODE = '839167' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '50' WHERE DRUG_CODE = '849863' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';
UPDATE ACTIVE_INGREDIENTS   SET STRENGTH = '10' WHERE DRUG_CODE = '899917' AND   INGREDIENT = 'VITAMIN B6 (PYRIDOXINE HYDROCHLORIDE)';

CREATE TABLE route 
AS
(SELECT b.DRUG_CODE,ROUTE_OF_ADMINISTRATION
  FROM (SELECT * FROM route_ia 
        UNION ALL 
        SELECT * FROM route_act
        UNION ALL 
        SELECT * FROM route_ap) a
 JOIN drug_product b ON old_code = a.drug_Code);

UPDATE route
SET ROUTE_OF_ADMINISTRATION = REGEXP_REPLACE (ROUTE_OF_ADMINISTRATION, '"');

CREATE TABLE form 
AS
(SELECT b.DRUG_CODE,PHARMACEUTICAL_FORM
  FROM (SELECT * FROM form_ia 
        UNION ALL 
        SELECT * FROM form_act
        UNION ALL 
        SELECT * FROM form_ap) a
 JOIN drug_product b ON old_code = a.drug_Code);

UPDATE FORM
SET PHARMACEUTICAL_FORM=regexp_replace(PHARMACEUTICAL_FORM,'"');


CREATE TABLE packaging 
AS
(SELECT b.DRUG_CODE,PACKAGE_SIZE_UNIT,PACKAGE_TYPE,PACKAGE_SIZE,PRODUCT_INFORMATION
  FROM (SELECT * FROM packaging_ia 
	UNION ALL 
	SELECT * FROM packaging_act
	UNION ALL 
	SELECT * FROM packaging_ap) a
 JOIN drug_product b ON old_code = a.drug_Code);

DROP TABLE status;
CREATE TABLE status 
AS
(SELECT b.DRUG_CODE,STATUS,HISTORY_DATE,CURRENT_STATUS_FLAG
  FROM (SELECT * FROM status_ia 
	UNION ALL 
	SELECT * FROM status_act
	UNION ALL 
	SELECT * FROM status_ap) a
 JOIN drug_product b ON old_code = a.drug_Code);

CREATE TABLE companies 
AS
(SELECT b.DRUG_CODE,MFR_CODE,COMPANY_CODE,COMPANY_NAME,COMPANY_TYPE,ADDRESS_MAILING_FLAG,ADDRESS_BILLING_FLAG,ADDRESS_NOTIFICATION_FLAG,ADDRESS_OTHER,SUITE_NUMBER,STREET_NAME,CITY_NAME,PROVINCE,COUNTRY,POSTAL_CODE,POST_OFFICE_BOX
  FROM (SELECT * FROM companies_ia 
	UNION ALL 
	SELECT * FROM companies_act
	UNION ALL 
	SELECT * FROM companies_ap) a
 JOIN drug_product b ON old_code = a.drug_code);

UPDATE companies
SET company_name = REGEXP_REPLACE (company_name ,'"');
update companies
set  COMPANY_NAME = 'BLAIREX LABORATORIES INC.'
where COMPANY_NAME = 'BLAIREX LABORATORIES, INC.';

--update a single inaccuracy in the manufacturers
UPDATE companies
SET company_name = 'BAXTER AG'
WHERE company_name = 'OSTERREICHISCHES INSTITUT FUR HAEMODERIVATE GES M.B.H.';
COMMIT;

CREATE TABLE therapeutic_class 
AS
(SELECT b.DRUG_CODE,TC_ATC_NUMBER,TC_ATC,TC_AHFS_NUMBER,TC_AHFS
  FROM (SELECT * FROM therapeutic_class_act
      UNION ALL
      SELECT * FROM therapeutic_class_ia
      UNION ALL
      SELECT * FROM therapeutic_class_ap) a
 JOIN drug_product b ON old_code = a.drug_code);?

?--TABLE WITH UNITS FOR DRUG_CONCEPT_STAGE
CREATE TABLE unit AS (
SELECT DISTINCT UPPER (strength_unit) AS concept_name, UPPER (strength_unit)  AS concept_code, 'Unit' AS concept_class_id
FROM ACTIVE_INGREDIENTS WHERE strength_unit IS not NULL AND strength_unit!='NIL');
INSERT INTO unit (concept_name,concept_code, concept_class_id)
VALUES ('SQ CM','SQ CM', 'Unit');
INSERT INTO unit (concept_name,concept_code, concept_class_id)
VALUES ('L','L', 'Unit');
INSERT INTO unit (concept_name,concept_code, concept_class_id)
VALUES ('HOUR','HOUR', 'Unit');
INSERT INTO unit (concept_name,concept_code, concept_class_id)
VALUES ('ACT','ACT', 'Unit');

--DRUG MANUFACTURER
CREATE TABLE manufacturer AS (
SELECT DISTINCT drug_code,company_name AS concept_name,
trim(regexp_replace(regexp_replace(regexp_replace(company_name,'( INC(\.)?)$|CORPORATION|LIMITED|( CORP$)|( L\.P\.)|( GMBH)|( CO)$|( CORP\.)|( CO\.)|( PLC)|( LTD)'),'(\.|,)$'),'\(\D+\)|\(\d+\)')) as new_name,
'Supplier' AS concept_class_id FROM companies
);

--Ingredient
CREATE TABLE ingr AS (
SELECT drug_code, active_ingredient_Code AS AIC, ingredient AS concept_name, 
'Ingredient' AS concept_class_id FROM active_ingredients);

--UPDATING INGREDIENTS IN ORDER TO DELETE ALL UNNECESSARY INFORMATION
UPDATE ingr
SET concept_name = REGEXP_REPLACE (concept_name,' \(.*\)')
WHERE REGEXP_LIKE (concept_name,'\(.*\)$') 
AND NOT REGEXP_LIKE ( concept_name,'(\()HUMAN|RABBIT|RECOMBINANT|SYNTHETIC|ACTIVATED|OVINE|ANHYDROUS|VICTORIA|YAMAGATA|PMSG|H3N2|H1N1|NPH|8|V.C.O|D.C.O|FIM|PRP-T|FSH|BCG|R-METHUG-CSF|MCT|JERYL LYNN STRAIN|EQUINE|DILUENT|WISTAR RA27/3 STRAIN|EDMONSTON B STRAIN|HAEMAGGLUTININ-STRAIN B|Neisseria meningitidis group B NZ98/254 strain|2|DOLOMITE|TUBERCULIN TINE TEST|LEAVESKELP, POTASSIUM IODIDE|TI 201|\[CUMIB4\]BF4|ETHYLENEOXY|CALCIFEROL|MA HUANG|BASIC|EXT\.|CALF|LIVER|PAW|PORK(\))');

UPDATE ingr
SET concept_name = REGEXP_REPLACE (concept_name,' \(.*\)')
WHERE concept_name LIKE '%(%BASIC%)' AND concept_name NOT LIKE '%(DIBASIC)' AND concept_name NOT LIKE '%(TRIBASIC)';

--CREATE TABLE WITH PRECISE NAME TAKEN FROM ORIGINAL TABLE TO USE LATER
CREATE TABLE ingr_OMOP 
AS
(SELECT DISTINCT drug_code, active_ingredient_Code AS AIC, ingredient AS concept_name, 'Ingredient' AS concept_class_id
  FROM active_ingredients);

UPDATE ingr_OMOP
   SET concept_name = REGEXP_SUBSTR(concept_name,'\(.*\)')
WHERE (NOT REGEXP_LIKE (UPPER(concept_name),'(\()HUMAN|RABBIT|RECOMBINANT|SYNTHETIC|ACTIVATED|OVINE|ANHYDROUS|BASIC|VICTORIA|YAMAGATA|PMSG|H3N2|H1N1|NPH|8|V.C.O|D.C.O|FIM|PRP-T|FSH|BCG|R-METHUG-CSF|MCT|JERYL LYNN STRAIN|EQUINE|DILUENT|WISTAR RA27/3 STRAIN|SACUBITRIL VALSARTAN SODIUM HYDRATE COMPLEX|EDMONSTON B STRAIN|HAEMAGGLUTININ-STRAIN B(\))')
       AND   NOT REGEXP_LIKE (concept_name,'(\()Neisseria meningitidis group B NZ98/254 strain|2|DOLOMITE|TUBERCULIN TINE TEST|BONE MEAL|FISH OIL|LEMON GRASS|LEAVES|ACETATE|YEAST|KELP|TI 201|COD LIVER OIL|[CU\(MIB\)4\]BF4|ETHYLENEOXY|PAPAYA|CALCIFEROL|MA HUANG|HORSETAIL|FLAXSEED|EXT\.|ROTH|CALF|PINEAPPLE|LIVER|PAW|PORK(\))'))
OR (concept_name LIKE '%(%BASIC%)' AND concept_name NOT LIKE '%(DIBASIC)' AND concept_name NOT LIKE '%(TRIBASIC)');

DELETE ingr_OMOP
WHERE concept_name IS NULL
OR    REGEXP_LIKE (concept_name,'(\()MCT|HUMAN|RABBIT|RECOMBINANT|SYNTHETIC|ACTIVATED|OVINE|ANHYDROUS|VICTORIA|YAMAGATA|PMSG|H3N2|H1N1|NPH|8|V.C.O|D.C.O|FIM|PRP-T|FSH|BCG|R-METHUG-CSF|JERYL LYNN STRAIN|EQUINE|DILUENT|WISTAR RA27/3 STRAIN|SACUBITRIL VALSARTAN SODIUM HYDRATE COMPLEX(\))')
OR    REGEXP_LIKE (concept_name,'(\()EDMONSTON B STRAIN|HAEMAGGLUTININ-STRAIN B|Neisseria meningitidis group B NZ98/254 strain|2|DOLOMITE|TUBERCULIN TINE TEST|BONE|OIL|LEMON GRASS|LEAVES|ACETATE|YEAST|KELP|TI 201|COD LIVER OIL|\[CU|MIB4\]BF4|ETHYLENEOXY|PAPAYA|CALCIFEROL|MA HUANG|HORSETAIL|FLAXSEED|EXT\.|ROTH|CALF|PINEAPPLE|LIVER|PAW|PORK(\))');


UPDATE ingr_OMOP
   SET concept_name = REGEXP_REPLACE(concept_name,'\(');
UPDATE ingr_OMOP
   SET concept_name = REGEXP_REPLACE(concept_name,'\)');

DELETE ingr_OMOP
WHERE REGEXP_LIKE (concept_name,'OIL|EGG|BONE|CRYSTALS|ACEROLA|ROSE HIPS|BUCKWHEAT|1-PIPERIDYLTHIOCARBONYL|RHIZOPUS|DRIED|ALOE|SENNA|OYSTER|WHEAT|VITAMIN |ASPERGILLUS|ANANAS|BARLEY|BORAGO');

DELETE ingr_OMOP
WHERE concept_name LIKE '%,%' AND   concept_name NOT LIKE '%KELP%';

DELETE ingr_OMOP
WHERE concept_name IN ('D.C.O.','BCG','DEXTROSE','EPHEDRA','CIG','S','BLACK CURRANT','ATTENUAT. STRAIN SA14-14-2 PRODUCED IN VERO CELLS','FEVERFEW','EXTRACT','H1N1V-LIKE STRAIN X-179A','H5N1','HOMEO','III','INS','LIVER EXTRACT','PRP','NUTMEG','RHPDGF-BB','SAGO PALM','SEA PROTEINATE','SOYBEAN','VIRIDANS AND NON-HEMOLYTIC','PURIFIED CHICK EMBRYO CELL CULTURE','DURAPATITE','OXYCARBONATE','BENZOTHIAZOLE','BENZOTHIAZOLE','MORPHOLINOTHIO','OKA/MERCK STRAIN');

DELETE INGR_OMOP
WHERE DRUG_CODE = '782971' AND   AIC = '10225' AND   CONCEPT_NAME = 'POVIDONE-IODINE';

DELETE INGR_OMOP
WHERE DRUG_CODE = '593710' AND   AIC = '105' AND   CONCEPT_NAME = 'MAGNESIUM OXIDE';

DELETE INGR_OMOP
WHERE DRUG_CODE = '94498' AND   AIC = '778' AND   CONCEPT_NAME = 'MAGNESIUM CITRATE';

UPDATE ingr
SET concept_name = REGEXP_REPLACE (concept_name,' \(.*\)') WHERE concept_name LIKE '%(%,%)%' AND drug_code IN (SELECT drug_code FROM ingr_OMOP);

--CREATING TABLE WITH FINAL INGREDIENT NAMES, ALSO WILL BE USED IN DRUG_STRENGTH_STAGE.PICN STANDS FOR PRECISE INGREDIENT CONCEPT NAME
CREATE TABLE ingr_2 
AS
SELECT DISTINCT a.concept_name AS PICN, c.drug_code, c.AIC, c.CONCEPT_NAME, STRENGTH, STRENGTH_UNIT, STRENGTH_TYPE, DOSAGE_VALUE, DOSAGE_UNIT, NOTES
FROM ingr c
  JOIN active_ingredients b
    ON c.AIC = b.active_ingredient_code
   AND b.drug_Code = c.drug_code
  LEFT JOIN ingr_OMOP a
         ON a.AIC = c.AIC
        AND a.drug_code = c.drug_code
        AND REGEXP_LIKE (INGREDIENT,a.concept_name);

UPDATE ingr_2
   SET concept_name = PICN
WHERE PICN IS NOT NULL;

UPDATE ingr_2
   SET concept_name = REGEXP_REPLACE(concept_name,' \(.*\)')
WHERE UPPER(concept_name) LIKE '%(%,%)%'
OR    UPPER(concept_name) LIKE '%(DOLOMITE)%'
OR    UPPER(concept_name) LIKE '%(LIVER)%'
OR    UPPER(concept_name) LIKE '%(CALCIFEROL)%'
OR    UPPER(concept_name) LIKE '%(ACETATE)%';


UPDATE ingr_2    SET STRENGTH = '10' WHERE STRENGTH = ' 10' AND   STRENGTH_UNIT = '%' AND   DOSAGE_VALUE IS NULL AND   DOSAGE_UNIT = '%' AND   drug_code = '2229776';
UPDATE ingr_2    SET CONCEPT_NAME='SENNOSIDES B' WHERE CONCEPT_NAME='B'; 

DELETE ingr_2 -- delete water AS unimportant ingredient
WHERE CONCEPT_NAME = 'x'
OR    (drug_code IN (SELECT DRUG_CODE
                     FROM ingr
                     WHERE drug_code IN (SELECT DRUG_CODE FROM ingr WHERE aic IN ('8826','893'))
                     GROUP BY drug_code
                     HAVING COUNT(1) > 1) AND aic IN ('8826','893'));

--DELETING ALL PSEUDO-UNITS
UPDATE ingr_2
   SET strength_unit = NULL
WHERE STRENGTH_UNIT = 'NIL';

UPDATE ingr_2
   SET strength = NULL
WHERE STRENGTH = '0';

UPDATE ingr_2
   SET dosage_unit = NULL
WHERE dosage_unit IN ('TAB','CAP','BLISTER','LOZ','PCK','PIECE','SUP','ECT','NS','EVT','TSP','GUM','SRC','WAF','SRT','SUT','SLT','SRD','DOSE','DROP','SPRAY','VIAL','CARTRIDGE','INSERT','CARTRIDGE','INSERT','GUM','PAD','PATCH','PCK','PEN','SUT','SYR','TBS','W/W','W/V','V/V','V/W','CYLR','ECT','IMP','SUP','JAR','SYR','SRT','PAIL','VTAB','CH','CAN','D','DH','TABL','EVT','ECC','ECT','XMK','X','CAP','LOZ','BLISTER','PIECE','WAF','SRC','TSP','SLT','NS','PAD','AMP','BOTTLE','TEA','KIT','STRIP','NIL','GM');


--FORMS
CREATE TABLE forms AS (
SELECT DISTINCT 
CASE WHEN ROUTE_OF_ADMINISTRATION||' '||PHARMACEUTICAL_FORM='0-UNASSIGNED SOLUTION' THEN 'SOLUTION' 
     WHEN ROUTE_OF_ADMINISTRATION='NIL' THEN PHARMACEUTICAL_FORM 
     WHEN DRUG_CODE IN ('724041','1955330','1983776') THEN 'ORAL SOLUTION'
     ELSE ROUTE_OF_ADMINISTRATION||' '||PHARMACEUTICAL_FORM  END AS concept_name, 
'Dose Form' AS concept_class_id, drug_code
FROM (
SELECT DRUG_CODE,PHARMACEUTICAL_FORM,ROUTE_OF_ADMINISTRATION FROM form 
JOIN drug_product USING (drug_code)
LEFT JOIN route USING (drug_code)
)
WHERE drug_code not in (select drug_code from new_pack)
AND drug_code not in ('2405024','773530','2451727','2445131','2239730','2241159','2238525','2239371')--new packs
);
--delete form duplicates
DELETE forms
WHERE ROWID NOT IN (SELECT MIN(ROWID) FROM forms GROUP BY drug_code);
;

--TABLE WITH FORMS FOR DRUG_CONCEPT_STAGE
CREATE TABLE forms_2 AS (
SELECT DISTINCT concept_name, concept_class_id FROM forms
);

--Brand Names
CREATE TABLE brand_name 
AS
SELECT DISTINCT drug_code,
       brand_name,
       REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(brand_name,'(\s|-)(CAPSULES|STERILE|POWDER|INTRATHECAL|CAPSULE|CAPLETS|CAPLET|CAPS|CAP|ONT|SOLTN|SHP|INJECTABLE|SHAMPOO|INFUSION|CONCENTRATE|LOZENGES|SUPPOSITORY|INTRAVENOUS|DISPERSIBLE|LOZENGE|VAGINAL|INJ\.|CHEWABLE|CHEW|SUPPOSITORIES|LIQUID|LIQ|OPHTHALMIC|OPH|SUSPENSION|SUS|SRT|ORAL|RINSE|ORL|SOLUTION|SOLTN|SOL|LETS|PWS|SYR|PWR|GRANULE|SUPPOSITOIRE|DROPS|SYRUP|VIAL|IMPLANT|STK|GRAN|TABLETS|TABLET|TAB|FOR|INJECTION|INJ)(\s|,)',' '),'\(.*\)'),'\s-\s.*') AS new_name
FROM drug_product
WHERE (NOT REGEXP_LIKE (brand_name,'(\((D\d|S#|R))|(\dDH)|(\s\dD)|(\d+X)|((\dCH))|(\sUSP)|(AVEC)|(\sCATH)|(COMPOS)|(ACID CONCENTRATE)|(CONCENTRATED)|(STANDARDIZED)|(HOMEOPATHIC MEDICINE)|(HAEMODIALYSIS)|(HAND SCRUB)|(SUNSCREEN)|(\sFPS)|(\sSPF)') OR REGEXP_LIKE (brand_name,'INJEEL|FORTE|HEEL'));

--updating bunch of BN that have different patterns but are divided from a single BN
UPDATE brand_name 
   SET new_name = 'ROFERON-A' WHERE new_name LIKE '%ROFERON%';
UPDATE brand_name
   SET new_name = 'BENZAGEL' WHERE new_name LIKE '%BENZAGEL%';
UPDATE brand_name
   SET new_name = 'TYLENOL' WHERE new_name LIKE '%TYLENOL%';
UPDATE brand_name
   SET new_name = 'NEUTROGENA' WHERE new_name LIKE '%NEUTROGENA%';
UPDATE brand_name
   SET new_name = 'TRAVASOL' WHERE new_name LIKE '%TRAVASOL%';
UPDATE brand_name
   SET new_name = 'OGEN' WHERE new_name LIKE '%OGEN%';
UPDATE brand_name
   SET new_name = 'VICKS' WHERE new_name LIKE '%VICKS%';
UPDATE brand_name
   SET new_name = 'ADALAT' WHERE new_name LIKE '%ADALAT%';
UPDATE brand_name
   SET new_name = 'HEAD & SHOULDERS' WHERE new_name LIKE '%HEAD & SHOULDERS%';
UPDATE brand_name
   SET new_name = 'HAEMOSOL' WHERE new_name LIKE '%HAEMOSOL%';
UPDATE brand_name
   SET new_name = 'HAEMOSOL' WHERE new_name LIKE '%HEMASATE%' OR    new_name LIKE '%HEMOSATE%';
UPDATE brand_name
   SET new_name = 'RELISORM' WHERE new_name LIKE '%RELISORM%';
UPDATE brand_name
   SET new_name = 'DELFLEX' WHERE new_name LIKE '%DELFLEX%';
UPDATE brand_name
   SET new_name = 'DELFLEX' WHERE new_name LIKE '%NATURALYTE%';
UPDATE brand_name
   SET new_name = 'GYNECURE' WHERE new_name LIKE '%GYNECURE%';
UPDATE brand_name
   SET new_name = 'NITRO-DUR' WHERE new_name LIKE '%NITRO-DUR%';
UPDATE brand_name
   SET new_name = 'MYLAN-NITRO PATCH' WHERE new_name LIKE '%MYLAN-NITRO PATCH%';
UPDATE brand_name
   SET new_name = 'TRANSDERM-NITRO' WHERE new_name LIKE '%TRANSDERM-NITRO%';
UPDATE brand_name
   SET new_name = 'AMINOSYN' WHERE new_name LIKE '%AMINOSYN%';
UPDATE brand_name
   SET new_name = 'BALMINIL' WHERE new_name LIKE '%BALMINIL%';
UPDATE brand_name
   SET new_name = 'BEMINAL' WHERE new_name LIKE '%BEMINAL%';
UPDATE brand_name
   SET new_name = 'BENYLIN' WHERE new_name LIKE '%BENYLIN%';
UPDATE brand_name
   SET new_name = 'DIANEAL' WHERE new_name LIKE '%DIANEAL%';
UPDATE brand_name
   SET new_name = 'MAALOX' WHERE new_name LIKE '%MAALOX%';
UPDATE brand_name
   SET new_name = 'ROBITUSSIN' WHERE new_name LIKE '%ROBITUSSIN%';
UPDATE brand_name
   SET new_name = 'RODAN & FIELDS' WHERE new_name LIKE '%RODAN & FIELDS%';
UPDATE brand_name
   SET new_name = 'SUDAFED' WHERE new_name LIKE '%SUDAFED%'; 
UPDATE brand_name
   SET new_name = 'CLEAN & CLEAR' WHERE new_name LIKE '%CLEAN & CLEAR%' OR new_name LIKE '%CLEAN AND CLEAR%';
UPDATE brand_name
   SET new_name = 'COUGH & CHEST' WHERE new_name LIKE '%COUGH & CHEST%' OR new_name LIKE '%COUGH AND CHEST%';
UPDATE brand_name
   SET new_name = 'KOFFEX DM' WHERE new_name LIKE '%KOFFEX DM%';
UPDATE brand_name
   SET new_name = 'OPTION +' WHERE new_name LIKE '%OPTION +%';
UPDATE brand_name
   SET new_name = 'OMNI-PAK' WHERE new_name LIKE '%OMNI-PAK%';
UPDATE brand_name
   SET new_name = 'SOLUPREP' WHERE new_name LIKE '%SOLUPREP%';
UPDATE brand_name
   SET new_name = 'VAGINEX' WHERE new_name LIKE '%VAGINEX%';
UPDATE brand_name
   SET new_name = 'DAMYLIN' WHERE new_name LIKE '%DAMYLIN%';
UPDATE brand_name
   SET new_name = 'INPERSOL' WHERE new_name LIKE '%INPERSOL%';
UPDATE brand_name
   SET new_name = 'T/GEL' WHERE new_name LIKE '%T/GEL%';
UPDATE brand_name
   SET new_name = 'PRO-LECARB' WHERE new_name LIKE '%PRO-LECARB%';
UPDATE brand_name
   SET new_name = 'PRISM0CAL' WHERE new_name LIKE '%PRISM0CAL%';
UPDATE brand_name
   SET new_name = 'ACCUSOL' WHERE new_name LIKE '%ACCUSOL%';
UPDATE brand_name
   SET new_name = 'ADENOCARD' WHERE new_name LIKE '%ADENOCARD%';
UPDATE brand_name
   SET new_name = 'ADVIL' WHERE new_name LIKE '%ADVIL%';
UPDATE brand_name
   SET new_name = 'FLOVENT' WHERE new_name LIKE '%FLOVENT%';
UPDATE brand_name
   SET new_name = 'MARCAINE' WHERE new_name LIKE '%MARCAINE%';
UPDATE brand_name
   SET new_name = 'PEPTO-BISMOL' WHERE new_name LIKE '%PEPTO-BISMOL%';
UPDATE brand_name
   SET new_name = 'BUGS BUNNY' WHERE new_name LIKE '%BUGS BUNNY%';
UPDATE brand_name
   SET new_name = 'MAXIPIME' WHERE new_name LIKE '%MAXIPIME%';
UPDATE brand_name
   SET new_name = 'OMNIPLEX' WHERE new_name LIKE '%OMNIPLEX%';
UPDATE brand_name
   SET new_name = 'AQUAFRESH' WHERE new_name LIKE '%AQUAFRESH%';
UPDATE brand_name
   SET new_name = 'LAPIDAR' WHERE new_name LIKE '%LAPIDAR%';
UPDATE brand_name
   SET new_name = 'E-PILO' WHERE new_name LIKE '%E-PILO%'; 
UPDATE brand_name
   SET new_name = 'ARISTOCORT' WHERE new_name LIKE '%ARISTOCORT%'; 
UPDATE brand_name
   SET new_name = 'GEL-KAM FLUOROCARE' WHERE new_name LIKE '%GEL-KAM FLUOROCARE%';  
UPDATE brand_name
   SET new_name = 'NAPROXEN' WHERE new_name LIKE '%NAPROXEN%';  
UPDATE brand_name
   SET new_name = 'MUCINEX' WHERE new_name LIKE '%MUCINEX%';  
UPDATE brand_name
   SET new_name = 'SELSUN' WHERE new_name LIKE '%SELSUN%';   
UPDATE brand_name
   SET new_name = 'IMOVAX' WHERE new_name LIKE '%IMOVAX%';  
UPDATE brand_name
   SET new_name = 'PARIET' WHERE new_name LIKE '%PARIET%'; 
UPDATE brand_name
   SET new_name = 'POLYCIDIN' WHERE new_name LIKE '%POLYCIDIN%'; 
UPDATE brand_name
   SET new_name = 'BUCKLEY''S COMPLETE' WHERE new_name LIKE '%BUCKLEY''S COMPLETE%';   
UPDATE brand_name
   SET new_name = 'VITRASERT' WHERE new_name LIKE '%VITRASERT%';  
UPDATE brand_name
   SET new_name = 'REACH ACT FLUORIDE' WHERE new_name LIKE '%REACH ACT FLUORIDE%';  
UPDATE brand_name
   SET new_name = 'PHARMALGEN' WHERE new_name LIKE '%PHARMALGEN%';  
UPDATE brand_name
   SET new_name = 'VENOMIL' WHERE new_name LIKE '%VENOMIL%';  
UPDATE brand_name
   SET new_name = 'BREVIBLOC' WHERE new_name LIKE '%BREVIBLOC%';  
UPDATE brand_name
   SET new_name = 'DRISTAN' WHERE new_name LIKE '%DRISTAN%';  
UPDATE brand_name
   SET new_name = 'CORICIDIN' WHERE new_name LIKE '%CORICIDIN%'; 
UPDATE brand_name
   SET new_name = 'CONTAC' WHERE new_name LIKE '%CONTAC%';   
UPDATE brand_name
   SET new_name = 'CONTAC' WHERE new_name LIKE '%COLGATE%'; 
UPDATE brand_name
   SET new_name = 'HALLS' WHERE new_name LIKE '%HALLS%';
UPDATE brand_name
   SET new_name = 'EFFIDOSE' WHERE new_name LIKE '%EFFIDOSE%';   
   UPDATE brand_name
   SET new_name = 'ACNOPUR' WHERE new_name LIKE '%ACNOPUR%';  
UPDATE brand_name
   SET new_name = 'WEBBER VITAMIN E' WHERE new_name LIKE '%WEBBER VITAMIN E%';

--remove all the mg/ml
UPDATE brand_name
   SET new_name = REGEXP_REPLACE(REGEXP_REPLACE(new_name,'\s(d+)?(/)?\d+(\.\d+)?(\s?)(\w+)?/(\d+)?(\.\d+)?(\w+)?(/)?(\d+)?(\w+)?'),'(\s|-)\d+((\.|,)\d+)?(\s)?(MG|MCG|GM|UI|IU|I\.U\.)(/)?(ML)?|\d+$');

--remove all the minerals and vitamins
UPDATE brand_name
   SET new_name = REGEXP_REPLACE(new_name,'(DIETARY|MULTIVITAMIN|MULTIVIT & MINERAL|VITAMIN AND MINERAL|MULTI-VITAMIN|VITAMIN|VITAMIN MINERAL|MINERAL|MULTIVITAMIN AND MULTIMINERAL)?\s(SUPPLEMENT|SUPPLEMEN|SUPPLE|SUPPL|SUPP|SUPPLY)(\s|$)((\s)DE VITAMINES ET MINERAL)?',' ');

UPDATE brand_name
   SET new_name = REGEXP_REPLACE(new_name,'(NEBULES.*)|PAKS|((\d+)?:.*)|(AVEC.*)|(\d+(\.\d+)?%)|(\sIV)');

--cut all the forms
UPDATE brand_name
   SET new_name = REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(new_name,'(\s|-)(CAPSULES|CAPSULE|CAPLETS|CAPLET|CAPS| CRM|CAP|ONT|SOLTN|SHP|INJECTABLE|SHAMPOO|INFUSION|CONCENTRATE|LOZENGES|PELLETS|PELLET|COMPRIMES|LOZ|SUPPOSITORY|INTRAVENOUS|DISPERSIBLE|LOZENGE|VAGINAL|INJ\.|CHEWABLE|CHEW|BUVABLES|SUPPOSITORIES|LIQUID|SOLUTION|CR?ME|CREAM|LOTION|TOOTHPASTE|LIQ|OPHTHALMIC|OPH|SUSPENSION|SUS|SRT|INHALER|ORAL|RINSE|ORL|SOLUTION|SOLTN|SOL|LETS|PWS|SYR|PWR|GRANULE|SUPPOSITOIRE|DROPS|SYRUP|VIAL|IMPLANT|STK|GRAN|TABLETS|TRANSDERMAL SYSTEM|TABLET|TAB|FOR|INJECTION|INJ$|(\d+-)?\s?\d+)$',' '),'\(.*\)'),'\s-\s.*'),'\s(II)|(I)$')
WHERE brand_name NOT LIKE '%TISSEEL%';

--cut the forms+route+flavours 
update brand_name
set new_name = regexp_replace(new_name, 'APPLE|FOAM|POWDER|MEDICATED|HONEY|GINGER|CINNAMON|CITRUS|TYRANNA|BUBBLE GUM|WITCHY CANDY|GRAPE|KOALA BERRY|LEMON|SYSTEM |GRANULES|SCALP APPLICATION|ELIXIR|CARTRIDGE|FLAVOURED|FLAVORED|MULTIFLAVOUR|FLAVOUR|BUTTERSCOTCH|ORANGE|CHERRY|MINT|PACKET|MENTHOLATED|INHALATION SOLUTON|PHARMACY BULK|ENEMA|ELIXIR|SYRINGE|IRRIGATING|TOPICAL|NASAL SPRAY')
where not regexp_like(new_name,'(^MINT-)');

--cut the forms+route
update brand_name
set new_name = regexp_replace(new_name, 'INJECTABLE|ANTIFUNGAL|NON-PRESCRIPTION|NON PRESCRIPTION|ANTI-FUNGAL|LINIMENT|AROMATIQUE|OINTMENT|AQUAGEL|RESPIRATOR|CHEWS|REMINERALIZING|BLACK CURRANT|PEACH|AQUEOUS|PINK FRUIT|CRYSTAL|FRAGRANCE FREE|SUGAR FREE|ALCOHOL FREE| YEAST FREE| CFC FREE|ASSORTED|ENTERIC COATED')
;
--cut units
update brand_name
set new_name = regexp_replace(new_name, '( MCG$)|(\d+UNIT)|( SUP$)|( TOP$)|( AMP$)|( MG$)|( CRM$)|( PREP$)|( VAG$)|( EYE$)|( EAR$)|( SOLN$)|( ORAL$)');

UPDATE brand_name
   SET new_name = REGEXP_REPLACE(new_name,'-',' ')
WHERE drug_code IN (SELECT a.drug_code
                    FROM brand_name a
                      JOIN brand_name b ON REGEXP_REPLACE (a.new_name,'-',' ') = b.new_name);

--cut %,coma etc
UPDATE brand_name
SET new_name = TRIM(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(new_name,'%'),'(-|,|\.| INH|#)$'),'  ',' '));

--deleting homeopathy drugs (form instance, apis milleflora 4D)
DELETE brand_name
WHERE REGEXP_LIKE (new_name,'(\d+D)|(D\d+)|(\sC\d+\s)|(\s\d+X\s)|(\s\d+X-(\d+)?C\d+\s)|(\sC\d+-(\d+)?C\d+\s)|\(');

--deleting ingredients
DELETE brand_name
WHERE REGEXP_LIKE (new_name,'PRAEPARATUM|CONDITIONING|METALLICUM|COMPOUND|CHARCOAL|BEECH|^\d+|\.|USP|CITRASATE|COENZYME Q10|^FORMULA|^VITAMIN') and not regexp_like (new_name,'TISSEEL');

--deleting vitamins, satls (except ing+supplier name)
DELETE brand_name
WHERE REGEXP_LIKE (new_name,'CODEINE|CHLORIDE|SODIUM|DILUENT|VACCIN|/|SULFATE|B COMPLEX/BETA-CAROTENE|CAL-MAG|CAL MAG|CALAMINE|CALCIUM|CHELATED|ACIDE|POTASSIUM|MAGNESIUM|\sZINC|ZINC\s|CARBONATE|HYDROCHLOROTHIAZIDE|VANADIUM|DEXTROSE|PRIMROSE|GINGIBRAID|IRON|LIDOCAINE|FLORA |FLORASUN|LEAVES|LEVONORGESTREL|ALUMINA|HEEL (\d)+|HP(\d)+ DPS|R(\d)+ DPS|D(\d)+ - DPS|R (\d)+ DPS|R-(\d)+ DPS|D (\d)+ DPS|D-(\d)+ DPS|(\d)+MM PLS|AC?TAMINOPH?NE|ACETAMINOPHEN|LACTATE|CHLORIDE|MIXTURE|NIACINAMIDE|NATRIUM|PETROLEUM|SATIVUM|CEANOTHUS|BEECH')
AND  NOT REGEXP_LIKE (new_name,'ACH|ACT|GD-|NTP|FTP-|^BCI |AJ-|NOVO|NAT-|NU-|TARO-|ZINDA-|MUSCLE|MED-|ODAN-|PDP-|PENTA-|^Q-|RHO-|RHOXAL|SEPTA-|-ODAN|SYN-|^MED |MDK-|PRO-|ZYM-|ABBOTT|VITA-|VAN-|VAL-|ROCKY|RAN-|GEN-|BEECH|ALTI-|MYL-|MAR-|AA-|JAMP|ACCEL|AURO|INJEEL|APO|AVA|BIO|DOM|RIVA|TORRENT-|MINIMS|T/GEL|MINT|MYLAN|NTPORB|PAL|PAT|PHL|PMS|PORT|RATIO|SANDOZ|TEVA');

--deleting vitamins, satls (except ing+supplier name)
DELETE FROM brand_name
WHERE REGEXP_LIKE (new_name,'ALLERGENIC|FLOS|AMMONIA|ALLERGENIC|MURICATUM|CERTIFIED|IBUPROFEN DAYTIME|ONE ALPHA|ONE-ALPHA|SCLERATUS|NATRUM|ISONIAZIDE|COMPLEX|HOMEO-|BRASILIENSIS|LIQUID|- COUGH|HOMEOPATHIC|GUAIFENSINE|IODUM|IODIUM|CHEWABLE|MULTIMINERALS|MULTIPLE|MULTIVITAMIN|ENZYME|ANTIBIOTIC|CHILDREN')
AND  NOT REGEXP_LIKE (new_name,'ACH|ACT|GD-|NTP|FTP-|^BCI |AJ-|NOVO|NAT-|NU-|FLINTSTONES|TARO-|ZINDA-|RELIEF|GAVISCON|MUSCLE|MED-|ODAN-|PDP-|PENTA-|^Q-|RHO-|RHOXAL|SEPTA-|-ODAN|SYN-|^MED |MDK-|PRO-|ZYM-|ABBOTT|VITA-|VAN-|VAL-|ROCKY|RAN-|GEN-|BEECH|ALTI-|MYL-|MAR-|AA-|JAMP|ACCEL|AURO|INJEEL|APO|AVA|BIO|DOM|RIVA|MINIMS|T/GEL|MINT|MYLAN|NTPORB|PAL|PAT|PHL|PMS|PORT|RATIO|SANDOZ|TEVA');

--deleting acids, satls,enzymes (except ing+supplier name)
DELETE FROM brand_name
WHERE REGEXP_LIKE (new_name,'COD LIVER|CC II|VC II|(^DECONGESTANT )|(^COOLING )|RELEASED|BACITRACIN|INJECTION|CISPLATIN|ACIDUM|CAROTENE|ECHINACEA| ACID| VACC|INACTIVATED|ACONIT|NITRATE|CALMINE|CANDIDA|CARBOPLATIN|^FORMULE|EPSOM|CITRATE|CANADENSIS|ABELMOSCHUS|BIFIDUM|ACIDOPHILUS|ACIDE|AMBROSIA|HYDROXYAPATITE|ALPHACOPHEROL|ENZYME|ALLIUM|AMOXICILLIN|THERAPEUTIC|#|SWAB|COMBINATION')
AND  NOT REGEXP_LIKE (new_name,'ACH|ACT|GD-|NTP|FTP-|^BCI |AJ-|NOVO|NAT-|NU-|FLINTSTONES|TARO-|ZINDA-|RELIEF|GAVISCON|MUSCLE|MED-|ODAN-|PDP-|PENTA-|^Q-|RHO-|RHOXAL|SEPTA-|-ODAN|SYN-|^MED |MDK-|PRO-|ZYM-|ABBOTT|VITA-|VAN-|VAL-|ROCKY|RAN-|GEN-|BEECH|ALTI-|MYL-|MAR-|AA-|JAMP|ACCEL|AURO|INJEEL|APO|AVA|BIO|DOM|RIVA|MINIMS|T/GEL|MINT|MYLAN|NTPORB|PAL|PAT|PHL|PMS|PORT|RATIO|SANDOZ|TEVA');


DELETE brand_name
WHERE REGEXP_LIKE (new_name,' AND | W |\+|&')
AND   NOT REGEXP_LIKE (new_name,'HEAD & SHOULDERS|MUSCLE|COLD|FLU|RODAN & FIELDS|SINUS|PAIN|TRIAMINIC|FRESH & GO|DANDRUFF|FLINTSTONES|EX-LAX|TUSS|DEFEND|DAY|NIGHT');

DELETE brand_name 
WHERE (length(new_name)<5 OR regexp_like (new_name,' COMP$') OR new_name in ('ALLERGY','DANDRUFF')) AND NOT REGEXP_LIKE (new_name,'SERC|OVOL|QVAR|MUSE') ;

--deleting bn that resemble ingredients
DELETE brand_name
WHERE drug_code IN (
SELECT drug_code FROM brand_name bn JOIN ingr_2 i USING (drug_code)
WHERE new_name LIKE '%'||CONCEPT_NAME||'%'
AND NOT REGEXP_LIKE (new_name,'ACH|ACT|GD-|NTP|FTP-|^BCI |AJ-|NOVO|NAT-|NU-|TARO-|ZINDA-|COMBI|PACK|MUSCLE|MED-|ODAN-|PDP-|PENTA-|^Q-|RHO-|RHOXAL|SEPTA-|-ODAN|SYN-|^MED |MDK-|PRO-|ZYM-|ABBOTT|VITA-|VAN-|VAL-|ROCKY|RAN-|GEN-|BEECH|ALTI-|MYL-|MAR-|AA-|JAMP|ACCEL|AURO|INJEEL|APO|AVA|BIO|DOM|RIVA|MINIMS|T/GEL|MINT|MYLAN|NTPORB|PAL|PAT|PHL|PMS|PORT|RATIO|SANDOZ|TEVA'));

--deleting bn that resemble ingredients in concept
DELETE brand_name
WHERE LOWER(new_name) IN (SELECT LOWER(concept_name) FROM concept WHERE concept_class_id IN ('Ingredient','AU Substance','ATC 5th','Chemical Structure','Substance','Pharma/Biol Product','Pharma Preparation','Clinical Drug Form','Dose Form','Precise Ingredient'));

--need to insert over here (using table brand name)
INSERT INTO new_pack(CONCEPT_CODE,AIC,CONCEPT_NAME,INGREDIENT,AMOUNT_VALUE,AMOUNT_UNIT,NUMERATOR_VALUE,NUMERATOR_UNIT,DENOMINATOR_VALUE,DENOMINATOR_UNIT,NOTES,DRUG_CODE,BRAND_NAME)
SELECT DRUG_CODE,ACTIVE_INGREDIENT_CODE,drug_name||' ['||new_name||']', INGREDIENT,
CASE WHEN DOSAGE_UNIT is NULL or DOSAGE_UNIT IN ('CAP','TAB','TABL','VIAL') THEN STRENGTH ELSE NULL end,
CASE WHEN DOSAGE_UNIT is NULL or DOSAGE_UNIT IN ('CAP','TAB','TABL','VIAL') THEN STRENGTH_UNIT ELSE NULL end,

CASE WHEN DOSAGE_UNIT ='ML' or STRENGTH_UNIT='%' THEN STRENGTH ELSE NULL end,
CASE WHEN DOSAGE_UNIT ='ML' THEN STRENGTH_UNIT 
     WHEN STRENGTH_UNIT='%' THEN 'MG' ELSE NULL end,
CASE WHEN DOSAGE_UNIT ='ML' or STRENGTH_UNIT='%' THEN DOSAGE_VALUE ELSE NULL end,
CASE WHEN DOSAGE_UNIT='ML' or STRENGTH_UNIT='%' THEN 'ML' ELSE NULL end,
NOTES,DRUG_CODE,NEW_NAME FROM 
(SELECT distinct listagg (INGREDIENT, '/') WITHIN GROUP (ORDER BY DOSAGE_UNIT) OVER (PARTITION BY ai.drug_code,DOSAGE_UNIT ) AS drug_name,ai.*,new_name,brand_name FROM 
active_ingredients ai
left join brand_name bn on bn.DRUG_CODE=ai.DRUG_CODE
where ai.drug_code IN ('2405024','773530','2451727','2445131','2239730','2241159','2238525','2239371' ))
;

--pack forms
INSERT INTO pack_form (CONCEPT_NAME_1,CONCEPT_NAME_2)
SELECT distinct drug_name||' ['||new_name||']',
CASE WHEN DOSAGE_UNIT='CAP' OR DOSAGE_UNIT IS NULL THEN 'ORAL CAPSULE'
     WHEN DOSAGE_UNIT='TAB' THEN 'ORAL TABLET'
     WHEN DOSAGE_UNIT='TABL' THEN 'ORAL TABLET'
     WHEN DOSAGE_UNIT='VIAL' THEN 'POWDER FOR SUSPENSION'
     WHEN DOSAGE_UNIT='ML' AND REGEXP_LIKE (NEW_NAME,'REBETRON|PERJETA') THEN 'INJECTABLE SOLUTION'
     WHEN DOSAGE_UNIT='ML' AND NOT REGEXP_LIKE (NEW_NAME,'REBETRON|PERJETA') THEN 'ORAL LIQUID'
     WHEN DOSAGE_UNIT='W/W' THEN 'VAGINAL CREAM'
     ELSE NULL END                         
FROM 
(SELECT distinct listagg (INGREDIENT, '/') WITHIN GROUP (ORDER BY DOSAGE_UNIT) OVER (PARTITION BY ai.drug_code,DOSAGE_UNIT ) AS drug_name,ai.*,new_name,brand_name FROM 
active_ingredients ai
LEFT JOIN brand_name bn ON bn.DRUG_CODE = ai.DRUG_CODE
WHERE ai.drug_code IN ('2405024','773530','2451727','2445131','2239730','2241159','2238525','2239371' ));

--TABLE WITH OMOP-GENERATED CODES
CREATE TABLE list_temp AS (
SELECT a.*, conc_stage_seq.NEXTVAL AS concept_code 
FROM 
(SELECT lower(concept_name) as concept_name,'Ingredient' AS concept_class_id,'S' AS standard_concept FROM ingr_2 
WHERE concept_name IS NOT NULL
UNION 
SELECT new_name,'Brand Name','' FROM brand_name  
WHERE new_name IS NOT NULL
UNION 
SELECT brand_name,'Brand Name','' FROM new_pack 
WHERE brand_name IS NOT NULL
UNION 
SELECT concept_name,concept_class_id,'' FROM forms_2 
WHERE concept_name IS NOT NULL
UNION
SELECT concept_name, 'Drug Product','' FROM new_pack
UNION
SELECT new_name,concept_class_id,'' FROM manufacturer 
WHERE concept_name IS NOT NULL) a)
;

--CONCEPT-STAGE CREATION
TRUNCATE TABLE drug_concept_stage;
INSERT INTO drug_concept_stage (CONCEPT_NAME,VOCABULARY_ID,CONCEPT_CLASS_ID,STANDARD_CONCEPT,CONCEPT_CODE,POSSIBLE_EXCIPIENT,DOMAIN_ID,VALID_START_DATE,VALID_END_DATE,INVALID_REASON)
SELECT DISTINCT CONCEPT_NAME, 'DPD', CONCEPT_CLASS_ID, STANDARD_CONCEPT, CONCEPT_CODE, '','Drug', sysdate-1,
TO_DATE('2099/12/31', 'yyyy/mm/dd') AS valid_end_date, ''
 FROM 
(
SELECT INITCAP (CONCEPT_NAME) AS CONCEPT_NAME, CONCEPT_CLASS_ID,STANDARD_CONCEPT, 'DPD'||CONCEPT_CODE AS concept_code FROM list_temp --ADD 'OMOP' to all OMOP-generated concepts
UNION
SELECT CONCEPT_NAME,CONCEPT_CLASS_ID,'',CONCEPT_CODE FROM unit
UNION
SELECT INITCAP (BRAND_NAME||' [Drug]'),'Drug Product','',DRUG_CODE FROM drug_product
 );

UPDATE DRUG_CONCEPT_STAGE
   SET CONCEPT_NAME = 'Boehringer Ingelheim'
WHERE CONCEPT_NAME = 'Boehringer Ingelheim  Ltee';

 --FLAG INDICATING INERT INGREDIENTS 
UPDATE drug_concept_stage
SET POSSIBLE_EXCIPIENT = 1 WHERE UPPER (concept_name) = 'NEON';

--UPDATING VALID DATES USING INFO IN ORIGINAL TABLES
CREATE TABLE dates AS (
SELECT DISTINCT d.DRUG_CODE, valid_date  FROM drug_product d JOIN 
(
SELECT min(HISTORY_DATE) AS valid_date , drug_code FROM status group by drug_code
) a ON a.drug_code  =  cast(d.old_code AS varchar (255))
)
;
UPDATE drug_concept_stage a 
SET VALID_START_DATE = (SELECT valid_date FROM dates b WHERE a.concept_code  =  b.drug_code);
UPDATE drug_concept_stage 
SET VALID_START_DATE =  TO_DATE('1970/01/01', 'yyyy/mm/dd') 
WHERE valid_start_date IS NULL OR valid_start_date>sysdate;

TRUNCATE TABLE internal_relationship_stage ;
INSERT INTO internal_relationship_stage (concept_code_1,concept_code_2)
--drug to manufacturer
SELECT drug_code,concept_code
 FROM  manufacturer m
  JOIN drug_concept_stage d ON INITCAP (m.new_name) = INITCAP (d.concept_name) AND d.concept_class_id = 'Supplier'
--add pack components
UNION 
SELECT dcs2.concept_code,dcs.concept_code
 FROM manufacturer m
 JOIN drug_concept_stage dcs ON INITCAP (new_name) = INITCAP (dcs.concept_name) AND dcs.concept_class_id = 'Supplier'
 JOIN new_pack np ON np.drug_code = m.drug_code 
 JOIN drug_concept_stage dcs2 ON INITCAP (np.concept_name) = dcs2.concept_name AND dcs2.concept_class_id = 'Drug Product'
UNION 
--drug to ingredient
SELECT drug_code,concept_code
 FROM ingr_2 i
  JOIN drug_concept_stage dcs
    ON dcs.concept_name = INITCAP (i.concept_name)   AND concept_class_id = 'Ingredient'
 WHERE drug_code NOT IN (SELECT drug_code from new_pack) 
--add pack components
UNION 
SELECT dcs.concept_code,dcs2.concept_code 
 FROM new_pack np
  JOIN drug_concept_stage dcs ON INITCAP (np.concept_name) = dcs.concept_name AND dcs.concept_class_id = 'Drug Product'
  JOIN drug_concept_stage dcs2 ON INITCAP (np.INGREDIENT) = dcs2.concept_name AND dcs2.concept_class_id = 'Ingredient'
UNION 
--drug to form
SELECT drug_code,concept_code
 FROM forms f
  JOIN drug_concept_stage dcs
    ON INITCAP (f.concept_name) = dcs.concept_name AND dcs.concept_class_id = 'Dose Form'
 WHERE drug_code NOT IN (SELECT drug_code from new_pack)
UNION 
--add pack components
SELECT dcs.concept_code,dcs2.concept_code
 FROM pack_form p
  JOIN drug_concept_stage dcs    ON dcs.concept_name = INITCAP (p.concept_name_1)   AND dcs.concept_class_id = 'Drug Product'
  JOIN drug_concept_stage dcs2   ON dcs2.concept_name = INITCAP (p.concept_name_2)  AND dcs2.concept_class_id = 'Dose Form'
UNION 
SELECT drug_code,concept_code
 FROM brand_name 
 JOIN drug_concept_stage dcs ON INITCAP (new_name) = dcs.concept_name AND concept_class_id = 'Brand Name'
UNION 
--pack components BN
SELECT dcs2.concept_code,dcs.concept_code
 FROM drug_concept_stage dcs 
 JOIN new_pack np ON INITCAP (brand_name) = dcs.concept_name AND dcs.concept_class_id = 'Brand Name'
 JOIN drug_concept_stage dcs2 ON INITCAP (np.concept_name) = dcs2.concept_name AND dcs2.concept_class_id = 'Drug Product'
;

--inserting ingredients that are absent in original data
INSERT INTO internal_relationship_stage(concept_code_1, concept_code_2)
    WITH a AS (SELECT MAX(LENGTH(concept_name)) OVER (PARTITION BY drug_code) AS l1,dp.drug_code, dcs.concept_code
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND NOT REGEXP_LIKE (brand_name,' AND |/|WITH|HCTZ|\+| &')
               WHERE dp.drug_code NOT IN (SELECT concept_code_1 FROM internal_relationship_stage JOIN drug_concept_stage ON concept_code_2=concept_code AND concept_class_id='Ingredient')
               ORDER BY drug_code),
         b AS (SELECT drug_code,concept_name,brand_name,LENGTH(concept_name) AS l2
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND NOT REGEXP_LIKE (brand_name,' AND |/|WITH|HCTZ|\+| &')
               WHERE dp.drug_code NOT IN (SELECT concept_code_1 FROM internal_relationship_stage JOIN drug_concept_stage ON concept_code_2=concept_code AND concept_class_id='Ingredient'))
SELECT DISTINCT a.drug_code, concept_code FROM a JOIN b ON a.drug_code = b.drug_code AND l1 = l2 AND concept_name NOT IN ('Air','Gold','Fir','Cina','Tin','Aloe','Cocoa')
UNION
SELECT dp.drug_code,dcs.concept_code
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND REGEXP_LIKE (brand_name,'HCTZ')
               WHERE dp.drug_code NOT IN (SELECT concept_code_1 FROM internal_relationship_stage JOIN drug_concept_stage ON concept_code_2=concept_code AND concept_class_id='Ingredient')
UNION
SELECT dp.drug_code,dcs2.concept_code
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND REGEXP_LIKE (brand_name,'HCTZ|AND HYDROCHLOROTHIAZIDE')
                 LEFT JOIN drug_concept_stage dcs2 ON upper(dcs2.concept_name)='HYDROCHLOROTHIAZIDE'
               WHERE dp.drug_code NOT IN (SELECT concept_code_1 FROM internal_relationship_stage JOIN drug_concept_stage ON concept_code_2=concept_code AND concept_class_id='Ingredient') 
UNION 
SELECT dp.drug_code,dcs.concept_code
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND REGEXP_LIKE (brand_name,'&|WITH') AND NOT REGEXP_LIKE (brand_name,'COLD STIX|ERASER|HCTZ|HYDROCHLOROTHIAZIDE|DILUENT')
               --  LEFT JOIN drug_concept_stage dcs2 ON upper(dcs2.concept_name)='HYDROCHLOROTHIAZIDE'
               WHERE dp.drug_code NOT IN (SELECT concept_code_1 FROM internal_relationship_stage JOIN drug_concept_stage ON concept_code_2=concept_code AND concept_class_id='Ingredient') AND concept_name NOT IN ('Air','Zinc','Muscle','Citrus')
;
COMMIT;--creating ds_stage with unit conversion
CREATE TABLE ds_stage_0 AS (
SELECT DISTINCT drug_code as drug_concept_code, concept_code as ingredient_concept_code, CASE WHEN dosage_unit IS NULL AND  strength_unit!='%' THEN cast(strength AS float (126)) ELSE NULL END AS amount_value,
CASE WHEN dosage_unit IS NULL AND  strength_unit!='%' THEN strength_unit 
     WHEN dosage_unit = 'TM' OR strength_unit = 'TM' THEN NULL
     ELSE NULL END AS amount_unit,
CASE WHEN dosage_unit='CCID50' THEN cast(strength AS float (126))*0.7
     WHEN (dosage_unit IS NOT NULL AND dosage_unit!='CCID50') OR strength_unit='%'  THEN cast(strength AS float (126)) 
     WHEN dosage_unit = 'TM' OR strength_unit = 'TM' THEN NULL
     ELSE NULL END AS numerator_value,
CASE WHEN dosage_unit='CCID50' THEN 'PFU'
     WHEN (dosage_unit IS NOT NULL AND dosage_unit!='CCID50') OR strength_unit='%' THEN strength_unit 
     WHEN dosage_unit = 'TM' OR strength_unit = 'TM' THEN NULL
     ELSE NULL END AS numerator_unit,
CASE WHEN dosage_unit  IS NOT NULL THEN cast(dosage_value AS float (126))
     WHEN dosage_unit = 'TM' OR strength_unit = 'TM' THEN NULL  
     ELSE NULL END AS denominator_value, 
CASE WHEN dosage_unit  IS NOT NULL THEN dosage_unit 
     WHEN dosage_unit = 'TM' OR strength_unit = 'TM' THEN NULL
     ELSE NULL END AS denominator_unit
from ingr_2 d 
JOIN drug_concept_stage e ON INITCAP(d.concept_name) = e.concept_name AND e.concept_class_id='Ingredient' 
WHERE drug_code NOT IN (SELECT drug_code from new_pack)
AND drug_code NOT IN ('658332','702633'));

--build up ds_stage with up-to-date codes
INSERT INTO ds_stage_0 (DRUG_CONCEPT_CODE,INGREDIENT_CONCEPT_CODE,AMOUNT_VALUE,AMOUNT_UNIT,NUMERATOR_VALUE,NUMERATOR_UNIT,DENOMINATOR_VALUE,DENOMINATOR_UNIT)
SELECT dcs.concept_code,dcs2.concept_code, amount_value,amount_unit,numerator_value,numerator_unit,denominator_value,denominator_unit  FROM new_pack np
JOIN drug_concept_stage dcs ON INITCAP (np.concept_name) = dcs.concept_name AND  dcs.concept_class_id='Drug Product'
JOIN drug_concept_stage dcs2 ON INITCAP (np.ingredient) = dcs2.concept_name AND  dcs2.concept_class_id='Ingredient'
;
--deleting drugs with impossible dosages
DELETE ds_stage_0
WHERE drug_concept_code IN (SELECT drug_concept_code
                            FROM ds_stage_0
                            WHERE ((LOWER(numerator_unit) = 'mg' AND LOWER(denominator_unit) IN ('ml','g')) AND numerator_value / denominator_value > 1000)
                            OR    (LOWER(numerator_unit) = 'g' AND LOWER(denominator_unit) = 'ml' AND numerator_value / denominator_value > 1)
                            OR (numerator_value IS NULL AND amount_value IS NULL AND denominator_value IS NULL));

CREATE TABLE DS_STAGE_1
(
   DRUG_CONCEPT_CODE        VARCHAR(255),
   INGREDIENT_CONCEPT_CODE  VARCHAR(255),
   BOX_SIZE                 NUMBER,
   AMOUNT_VALUE             NUMBER,
   AMOUNT_UNIT              VARCHAR(255),
   NUMERATOR_VALUE          NUMBER,
   NUMERATOR_UNIT           VARCHAR(255),
   DENOMINATOR_VALUE        NUMBER,
   DENOMINATOR_UNIT         VARCHAR(255)
);
--updating drugs from ds_stage that have %
INSERT INTO ds_stage_1 (DRUG_CONCEPT_CODE,INGREDIENT_CONCEPT_CODE,AMOUNT_VALUE,AMOUNT_UNIT,NUMERATOR_VALUE,NUMERATOR_UNIT,DENOMINATOR_VALUE,DENOMINATOR_UNIT)
(SELECT DISTINCT DRUG_CONCEPT_CODE,INGREDIENT_CONCEPT_CODE,
CASE WHEN (NUMERATOR_UNIT='%' OR DENOMINATOR_UNIT IS NOT NULL) AND REGEXP_LIKE (CONCEPT_NAME,'CAPSULE|TABLET') THEN NUMERATOR_VALUE 
     ELSE AMOUNT_VALUE END,
CASE WHEN (NUMERATOR_UNIT='%' OR DENOMINATOR_UNIT IS NOT NULL) AND REGEXP_LIKE (CONCEPT_NAME,'CAPSULE|TABLET') THEN 'MG' 
     WHEN AMOUNT_UNIT='Kg' THEN 'KG'	
     WHEN AMOUNT_UNIT='mEq' THEN 'MEQ'	
     ELSE AMOUNT_UNIT END,
CASE WHEN (NUMERATOR_UNIT='%' OR DENOMINATOR_UNIT IS NOT NULL) AND REGEXP_LIKE (CONCEPT_NAME,'CAPSULE|TABLET')  THEN NULL
     WHEN NUMERATOR_UNIT='%' AND DENOMINATOR_VALUE IS NULL THEN NUMERATOR_VALUE/100 -- remove 2n cond AND DENOMINATOR_UNIT in ('ML','G') + as we use 'MG' as denominator than we need to multiple by 10 and / by 1000
     WHEN NUMERATOR_UNIT='%' AND DENOMINATOR_VALUE IS NOT NULL THEN NUMERATOR_VALUE*10*DENOMINATOR_VALUE     
     ELSE NUMERATOR_VALUE END,     
CASE WHEN (NUMERATOR_UNIT='%' OR DENOMINATOR_UNIT IS NOT NULL) AND REGEXP_LIKE (CONCEPT_NAME,'CAPSULE|TABLET')  THEN NULL  
     WHEN NUMERATOR_UNIT='%' AND NOT REGEXP_LIKE (CONCEPT_NAME,'CAPSULE|TABLET') THEN 'MG'
     WHEN NUMERATOR_UNIT='Kg' THEN 'KG'	
     WHEN NUMERATOR_UNIT='mEq' THEN 'MEQ'	 
     ELSE NUMERATOR_UNIT END,     
CASE WHEN (NUMERATOR_UNIT='%' OR DENOMINATOR_UNIT IS NOT NULL) AND REGEXP_LIKE (CONCEPT_NAME,'CAPSULE|TABLET')  THEN NULL
     ELSE DENOMINATOR_VALUE END,     
CASE WHEN (NUMERATOR_UNIT='%' OR DENOMINATOR_UNIT IS NOT NULL) AND REGEXP_LIKE (CONCEPT_NAME,'CAPSULE|TABLET')  THEN NULL 
     WHEN NUMERATOR_UNIT='%' AND (DENOMINATOR_UNIT IS NULL OR DENOMINATOR_UNIT='%') AND REGEXP_LIKE (CONCEPT_NAME,'STICK|POWDER|CAPSULE|TABLET|JELLY') THEN 'MG'
     WHEN NUMERATOR_UNIT='%' AND (DENOMINATOR_UNIT IS NULL OR DENOMINATOR_UNIT='%') AND NOT REGEXP_LIKE (CONCEPT_NAME,'STICK|POWDER|CAPSULE|TABLET|JELLY') THEN 'ML'
     WHEN DENOMINATOR_UNIT='Kg' THEN 'KG'	
     WHEN DENOMINATOR_UNIT='mEq' THEN 'MEQ'
     ELSE DENOMINATOR_UNIT END 
FROM ds_stage_0 ds
JOIN forms ON drug_concept_code = drug_code)
;
                            
TRUNCATE TABLE ds_stage;
--updating drugs that have ingredients with 2 or more dosages that need to be sum up
INSERT INTO ds_stage(DRUG_CONCEPT_CODE,INGREDIENT_CONCEPT_CODE,AMOUNT_VALUE,AMOUNT_UNIT,NUMERATOR_VALUE,NUMERATOR_UNIT,DENOMINATOR_VALUE,DENOMINATOR_UNIT)
SELECT DISTINCT drug_concept_code,ingredient_concept_code,SUM(AMOUNT_VALUE) OVER (PARTITION BY DRUG_CONCEPT_CODE,ingredient_concept_code,AMOUNT_UNIT),
       amount_unit,
       SUM(NUMERATOR_VALUE) OVER (PARTITION BY DRUG_CONCEPT_CODE,ingredient_concept_code,NUMERATOR_UNIT),
       numerator_unit,denominator_value, denominator_unit
FROM (SELECT drug_concept_code,ingredient_concept_code, box_size,
             CASE WHEN amount_unit = 'G' THEN amount_value*1000 WHEN amount_unit = 'MCG' THEN amount_value/1000  ELSE amount_value END AS amount_value,-- make amount units similar
             CASE WHEN amount_unit in ('G','MCG') THEN 'MG' ELSE amount_unit END AS amount_unit,
             CASE WHEN numerator_unit = 'G' THEN numerator_value*1000 WHEN numerator_unit = 'MCG' THEN numerator_value/1000 ELSE numerator_value END AS numerator_value,
             CASE WHEN numerator_unit in ('G','MCG') THEN 'MG' ELSE numerator_unit END AS numerator_unit,
             denominator_value,denominator_unit
      FROM ds_stage_1 a
      WHERE (drug_concept_code,ingredient_concept_code) IN (SELECT drug_concept_code,ingredient_concept_code
                                                            FROM ds_stage_1 GROUP BY drug_concept_code,ingredient_concept_code HAVING COUNT(1) > 1)
      UNION
      SELECT * 
      FROM ds_stage_1
      WHERE (drug_concept_code,ingredient_concept_code) NOT IN (SELECT drug_concept_code, ingredient_concept_code
                                                                FROM ds_stage_1 GROUP BY drug_concept_code,ingredient_concept_code HAVING COUNT(1) > 1)
      ) a
ORDER BY DRUG_CONCEPT_CODE, ingredient_concept_code;

--introduce box size
--use package_size to get box_size
MERGE INTO ds_stage ds
USING
(
  SELECT DISTINCT package_size,
         drug_code
  FROM packaging
  WHERE drug_code IN (SELECT drug_code
                      FROM (SELECT DISTINCT drug_code,
                                   package_size
                            FROM packaging
                            WHERE package_size IS NOT NULL
                            AND   package_size_unit IN ('LOZENGE','CAPLET','CAPSULE','SUPPOSITORY','TABLET','PATCH','PAD'))
                      GROUP BY drug_code
                      HAVING COUNT(1) = 1)
  AND   drug_code NOT IN (SELECT drug_code
                          FROM packaging
                          GROUP BY drug_code
                          HAVING COUNT(1) > 1)
) bs ON (bs.drug_code = ds.drug_concept_code)
WHEN MATCHED THEN UPDATE
  SET box_size = package_size;

--use PRODUCT_INFORMATION to get box_size
MERGE INTO ds_stage ds
USING
(
  SELECT DISTINCT REGEXP_SUBSTR(REGEXP_SUBSTR(PRODUCT_INFORMATION,'\d+(TAB|CAP|X)'),'\d+') AS pc,
         drug_code
  FROM packaging
  WHERE REGEXP_LIKE (PRODUCT_INFORMATION,'TAB|CAP|X|BLISTER')
  AND   package_size IS NULL
  AND   REGEXP_SUBSTR(PRODUCT_INFORMATION,'\d+(TAB|CAP|X)') IS NOT NULL
  AND   NOT REGEXP_LIKE (PRODUCT_INFORMATION,'/|AMOXICILLIN|\+|DAY|\(|\,|&|-|(X.*X)')
  AND   drug_code NOT IN (SELECT drug_code
                          FROM packaging
                          GROUP BY drug_code
                          HAVING COUNT(1) > 1)
) bs ON (bs.drug_code = ds.drug_concept_code)
WHEN MATCHED THEN UPDATE
  SET box_size = pc;

update ds_stage
set numerator_unit='%',numerator_value=amount_value/10000,amount_value=null,amount_unit=null
where AMOUNT_UNIT='PPM';

--inserting ingredients that are absent in original data
INSERT INTO ds_stage (drug_concept_code,ingredient_concept_code)
    WITH a AS (SELECT MAX(LENGTH(concept_name)) OVER (PARTITION BY drug_code) AS l1,dp.drug_code, dcs.concept_code
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND NOT REGEXP_LIKE (brand_name,' AND |/|WITH|HCTZ|\+| &')
               WHERE dp.drug_code NOT IN (SELECT drug_code FROM active_ingredients)
               ORDER BY drug_code),
         b AS (SELECT drug_code,concept_name,brand_name,LENGTH(concept_name) AS l2
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND NOT REGEXP_LIKE (brand_name,' AND |/|WITH|HCTZ|\+| &')
               WHERE dp.drug_code NOT IN (SELECT drug_code FROM active_ingredients))
SELECT DISTINCT a.drug_code, concept_code FROM a JOIN b ON a.drug_code = b.drug_code AND l1 = l2 AND concept_name NOT IN ('Air','Gold','Fir','Cina','Tin','Aloe','Cocoa')
UNION
SELECT dp.drug_code,dcs.concept_code
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND REGEXP_LIKE (brand_name,'HCTZ')
               WHERE dp.drug_code NOT IN (SELECT drug_code FROM active_ingredients)
UNION
SELECT dp.drug_code,dcs2.concept_code
               FROM drug_product dp
                 JOIN drug_concept_stage dcs ON brand_name LIKE '%' ||upper (concept_name) || '%' AND dcs.concept_class_id = 'Ingredient' AND REGEXP_LIKE (brand_name,'HCTZ|AND HYDROCHLOROTHIAZIDE')
                 LEFT JOIN drug_concept_stage dcs2 ON upper(dcs2.concept_name)='HYDROCHLOROTHIAZIDE'
               WHERE dp.drug_code NOT IN (SELECT drug_code FROM active_ingredients) ;


--homeopathy should be in numerator
update ds_stage
set numerator_unit=amount_unit,numerator_value=amount_value,amount_unit=null,amount_value=null
where amount_unit in ('DH','C','CH','D','TM','X','XMK');

--insert packs
insert into ds_stage (DRUG_CONCEPT_CODE,INGREDIENT_CONCEPT_CODE,AMOUNT_VALUE,AMOUNT_UNIT,NUMERATOR_VALUE,NUMERATOR_UNIT,DENOMINATOR_VALUE,DENOMINATOR_UNIT)
select distinct dcs.concept_code,dcs2.concept_code,AMOUNT_VALUE,AMOUNT_UNIT,NUMERATOR_VALUE,NUMERATOR_UNIT,DENOMINATOR_VALUE,DENOMINATOR_UNIT
 FROM new_pack np
  JOIN drug_concept_stage dcs ON INITCAP (np.concept_name) = dcs.concept_name AND dcs.concept_class_id = 'Drug Product'
  JOIN drug_concept_stage dcs2 ON INITCAP (np.INGREDIENT) = dcs2.concept_name AND dcs2.concept_class_id = 'Ingredient';
DELETE ds_stage
WHERE amount_unit IS NULL AND numerator_unit IS NULL AND denominator_unit IS NULL;


DELETE FROM DS_STAGE WHERE DRUG_CONCEPT_CODE = '2087286' AND   BOX_SIZE IS NULL AND   AMOUNT_VALUE = 10 AND   AMOUNT_UNIT = 'ML' AND   NUMERATOR_VALUE IS NULL AND   NUMERATOR_UNIT IS NULL AND   DENOMINATOR_VALUE IS NULL AND   DENOMINATOR_UNIT IS NULL;
DELETE FROM DS_STAGE WHERE DRUG_CONCEPT_CODE = '2087286' AND   BOX_SIZE IS NULL AND   AMOUNT_VALUE = 10 AND   AMOUNT_UNIT = 'ML' AND   NUMERATOR_VALUE IS NULL AND   NUMERATOR_UNIT IS NULL AND   DENOMINATOR_VALUE IS NULL AND   DENOMINATOR_UNIT IS NULL;
DELETE FROM DS_STAGE WHERE DRUG_CONCEPT_CODE = '2245464' AND   BOX_SIZE IS NULL AND   AMOUNT_VALUE IS NULL AND   AMOUNT_UNIT IS NULL AND   NUMERATOR_VALUE = 500 AND   NUMERATOR_UNIT = 'MCG' AND   DENOMINATOR_VALUE IS NULL AND   DENOMINATOR_UNIT = 'ML';
DELETE FROM DS_STAGE WHERE DRUG_CONCEPT_CODE = '2202034' AND   BOX_SIZE IS NULL AND   AMOUNT_VALUE IS NULL AND   AMOUNT_UNIT IS NULL AND   NUMERATOR_VALUE = 20 AND   NUMERATOR_UNIT = 'UNIT' AND   DENOMINATOR_VALUE IS NULL AND   DENOMINATOR_UNIT = 'UNIT';
UPDATE DS_STAGE   SET NUMERATOR_VALUE = 27.5 WHERE DRUG_CONCEPT_CODE = '2245464' AND   BOX_SIZE IS NULL AND   AMOUNT_VALUE IS NULL AND   AMOUNT_UNIT IS NULL AND   NUMERATOR_VALUE = 27 AND   NUMERATOR_UNIT = 'MG' AND   DENOMINATOR_VALUE IS NULL AND   DENOMINATOR_UNIT = 'ML';

UPDATE ds_stage
   SET amount_value = numerator_value, amount_unit = numerator_unit, numerator_unit = NULL,numerator_value = NULL, denominator_unit = NULL, denominator_value = NULL
WHERE drug_concept_code IN (SELECT drug_concept_code FROM ds_stage WHERE denominator_unit = numerator_unit AND numerator_value / NVL(denominator_value,1) > 1)
OR    drug_concept_code IN (SELECT a.drug_concept_code
                            FROM ds_stage a
                              JOIN ds_stage b ON a.drug_concept_code = b.drug_concept_code AND a.amount_unit IS NOT NULL AND b.numerator_unit IS NOT NULL);
 
DELETE ds_stage
WHERE drug_concept_code IN (SELECT drug_concept_code  FROM ds_stage WHERE amount_unit = 'ML' OR  numerator_unit = 'ML')
OR drug_concept_code IN  (SELECT drug_concept_code  FROM ds_stage WHERE amount_unit IS NULL AND numerator_unit IS NULL);

DELETE ds_stage WHERE  drug_concept_code IN (SELECT a.drug_concept_code
                            FROM ds_stage a
                              JOIN ds_stage b ON a.drug_concept_code = b.drug_concept_code AND a.ingredient_concept_code != b.ingredient_concept_code AND nvl(a.amount_unit,a.numerator_unit) IS NOT NULL AND nvl(b.amount_unit,b.numerator_unit) IS NULL);

INSERT INTO PC_STAGE_MANUAL (CONCEPT_NAME_1,CONCEPT_NAME_2 )
SELECT DISTINCT brand_name||' [Drug]',drug_name||' ['||new_name||']'         FROM
(SELECT DISTINCT listagg (INGREDIENT, '/') WITHIN GROUP (ORDER BY DOSAGE_UNIT) OVER (PARTITION BY ai.drug_code,DOSAGE_UNIT ) AS drug_name,ai.*,new_name,dp.brand_name FROM 
active_ingredients ai
LEFT JOIN brand_name bn ON bn.drug_code=ai.drug_code --left join form packs that don't have BN
JOIN drug_product dp ON dp.drug_code=ai.drug_code
WHERE ai.drug_code IN ('763047','690082','2405024','773530','2451727','2445131','2239730','2241159','2238525','2239371'  ))
where brand_name||' [Drug]' not in (
select cocnept_name_1 from pc_stage_manual);

--pc_stage

INSERT INTO pc_stage (pack_concept_code,drug_Concept_code,amount,box_size)
SELECT distinct dcs.concept_code,dcs2.concept_code,amount,box_size
FROM pc_stage_manual p
  JOIN drug_concept_stage dcs ON dcs.concept_name = INITCAP (p.concept_name_1)||' [Drug]' AND dcs.concept_class_id = 'Drug Product'
  JOIN drug_concept_stage dcs2 ON dcs2.concept_name = INITCAP (p.concept_name_2) AND dcs2.concept_class_id = 'Drug Product';


--insert into relationship_to_concept data from relationship_to_concept_bckp

--delete invalid concepts
DELETE relationship_to_concept
WHERE concept_code_1 IN (
SELECT concept_code_1 FROM relationship_to_concept rc
JOIN concept ON rc.concept_id_2=concept_id WHERE invalid_reason='D');  

--delete concepts that belong to different concept_class_id in RxNorm
DELETE  relationship_to_concept  
WHERE CONCEPT_CODE_1 IN ( SELECT concept_code_1 FROM relationship_to_concept r 
JOIN drug_concept_stage a ON a.concept_code= r.concept_code_1 
JOIN concept c on c.concept_id = r.concept_id_2  AND c.vocabulary_id = 'RxNorm' 
WHERE  a.concept_class_id !=  c.concept_class_id);

--give unmapped concepts to medical coders

commit; 
