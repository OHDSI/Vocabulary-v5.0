--CREATE TABLE icd_cde_source_backup_2_20_2024 as SELECT * FROM icd_cde_source;
--
----Backup before update from _mapped
--CREATE TABLE icd_cde_source_backup_6_17_2024 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_6_17_2024);
--
----Backup after update from _mapped
--CREATE TABLE icd_cde_source_backup_6_25_2024 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_6_25_2024);
--
----Backup after external sources insert
--CREATE TABLE icd_cde_source_backup_6_30_2024 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_6_30_2024);
--
--CREATE TABLE icd_cde_source_backup_7_26_2024 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_7_26_2024);
--
----backup new ICD10CM
--DROP TABLE icd_cde_source_backup_7_30_2024;
--CREATE TABLE icd_cde_source_backup_7_30_2024 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_7_30_2024);
--
----Backup before update from _mapped (08.2024)
--CREATE TABLE icd_cde_source_backup_8_28_2024 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_8_28_2024);

----Backup before update from _icd_fix (08.2024)
--CREATE TABLE icd_cde_source_backup_9_6_2024 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_8_28_2024);


----Backup before update (02.02.2025) - mappings done. before CC update
-- CREATE TABLE icd_cde_source_backup_02_02_2025 as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_8_28_2024);

----Backup before update (09.02.2025) - backup before first detach try
---- CREATE TABLE icd_cde_source_backup_09_02_2025_det as SELECT * FROM icd_cde_source;
--TRUNCATE TABLE icd_cde_source;
--INSERT INTO icd_cde_source (SELECT * FROM icd_cde_source_backup_8_28_2024);


--1. Ð¡DE source insertion
--- DROP TABLE dev_icd10.icd_cde_source;
--- TRUNCATE TABLE dev_icd10.icd_cde_source;
CREATE TABLE dev_icd10.icd_cde_source
(
    source_code                TEXT NOT NULL,
    source_code_description    TEXT,
    source_vocabulary_id       TEXT NOT NULL,
    group_name                 TEXT NOT NULL,
    group_id                   INT4 GENERATED BY DEFAULT AS IDENTITY (SEQUENCE NAME seq_cde_manual_group),
    --group_code                 varchar, -- group code is dynamic and is assembled after grouping just before insertion data into the google sheet
    medium_group_id            integer,
    --medium_group_code          varchar,
    broad_group_id             integer,
    --broad_group_code           varchar,
    for_review                 varchar,
    decision                   varchar,
    decision_date              varchar,
    relationship_id            varchar,
    relationship_id_predicate  varchar,
    target_concept_id          integer,
    target_concept_code        varchar,
    target_concept_name        varchar,
    target_concept_class_id    varchar,
    target_standard_concept    varchar,
    target_invalid_reason      varchar,
    target_domain_id           varchar,
    target_vocabulary_id       varchar,
    rel_invalid_reason         varchar,
    valid_start_date           date,
    valid_end_date             date,
    mappings_origin            varchar
);

-- 1. Update 'for_review' field;
UPDATE icd_cde_source SET for_review = null;

-- Insert mappings from external sources

-- 2. Run load_stage for every Vocabulary to be included into the CDE
-- 3. Run 'mapping_refresh' script for every Vocabulary to be included into the CDE
-- 4. Insert the data into the CDE.
-- Concepts, that are not supposed to have mappings are not included
-- If there are several mapping sources all the versions should be included, excluding duplicates within one vocabulary.
-- Mapping duplicates between vocabularies are preserved

--ICD10 with mappings / insert only new mappings during refresh
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            relationship_id,
                            --for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
-- Check Select before insertion
-- To insert mappings from concept_relationship_stage
SELECT cs.concept_code     as source_code,
       cs.concept_name     as source_code_description,
       'ICD10'             as source_vocabulary_id,
       cs.concept_name     as group_name,
       crs.relationship_id as relationship_id,
       --'1'                 as for_review,
       c.concept_id        as target_concept_id,
       crs.concept_code_2  as target_concept_code,
       c.concept_name      as target_concept_name,
       c.concept_class_id  as target_concept_class,
       c.standard_concept  as target_standard_concept,
       c.invalid_reason    as target_invalid_reason,
       c.domain_id         as target_domain_id,
       crs.vocabulary_id_2 as target_vocabulary_id,
       crs.invalid_reason  as rel_invalid_reason,
       crs.valid_start_date as valid_start_date,
       crs.valid_end_date  as valid_end_date,
       CASE WHEN c.concept_id is not null THEN 'crs' ELSE null END as mappings_origin
FROM dev_icd10.concept_stage cs
LEFT JOIN dev_icd10.concept_relationship_stage crs
    ON cs.concept_code = crs.concept_code_1
    AND crs.relationship_id in ('Maps to', 'Maps to value')
LEFT JOIN concept c
    ON crs.concept_code_2 = c.concept_code
    AND crs.vocabulary_id_2 = c.vocabulary_id
WHERE cs.concept_class_id NOT IN ('ICD10 Chapter','ICD10 SubChapter')
AND (cs.concept_code, c.concept_id) NOT IN (SELECT source_code, target_concept_id FROM icd_cde_source WHERE source_vocabulary_id = 'ICD10')
AND crs.concept_code_2 IS NOT NULL
;

--Update 'mappings_origin' flag
UPDATE icd_cde_source s SET
mappings_origin = 'functions_updated'
WHERE valid_start_date in (SELECT DISTINCT GREATEST (d.lu_1, d.lu_2)
FROM (SELECT v1.latest_update AS lu_1, v2.latest_update AS lu_2
			FROM concept_relationship_stage crs
			JOIN vocabulary v1 ON v1.vocabulary_id = crs.vocabulary_id_1
			JOIN vocabulary v2 ON v2.vocabulary_id = crs.vocabulary_id_2) d)
OR valid_end_date IN (SELECT DISTINCT GREATEST(crs.valid_start_date, (
				SELECT MAX(v.latest_update) - 1
				FROM vocabulary v
				WHERE v.vocabulary_id IN (
						crs.vocabulary_id_1,
						crs.vocabulary_id_2
					)
			)) FROM concept_relationship_stage crs);

--Insertion of the potential replacement mappings and concepts without mappings
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT
source_code,
source_code_description,
source_vocabulary_id,
source_code_description as group_name,
relationship_id,
'1' as for_review,
target_concept_id,
target_concept_code,
target_concept_name,
target_concept_class_id,
target_standard_concept,
target_invalid_reason,
target_domain_id,
target_vocabulary_id,
rel_invalid_reason,
valid_start_date,
valid_end_date,
mappings_origin
FROM icd10_refresh;

--ICD10CM with mappings / insert only new mappings during refresh
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            --for_review,
                            relationship_id,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
-- Check Select before insertion
SELECT cs.concept_code     as source_code,
       cs.concept_name     as source_code_description,
       'ICD10CM'           as source_vocabulary_id,
       cs.concept_name     as group_name,
       --'1'                 as for_review,
       crs.relationship_id as relationship_id,
       c.concept_id        as target_concept_id,
       crs.concept_code_2  as target_concept_code,
       c.concept_name      as target_concept_name,
       c.concept_class_id  as target_concept_class,
       c.standard_concept  as target_standard_concept,
       c.invalid_reason    as target_invalid_reason,
       c.domain_id         as target_domain_id,
       crs.vocabulary_id_2 as target_vocabulary_id,
       crs.invalid_reason  as rel_invalid_reason,
       crs.valid_start_date as valid_start_date,
       crs.valid_end_date as valid_end_date,
       CASE WHEN c.concept_id is not null THEN 'crs' ELSE null END as mappings_origin
FROM dev_icd10cm.concept_stage cs
LEFT JOIN dev_icd10cm.concept_relationship_stage crs
    ON cs.concept_code = crs.concept_code_1
    AND relationship_id in ('Maps to', 'Maps to value')
LEFT JOIN concept c
    ON crs.concept_code_2 = c.concept_code
    AND crs.vocabulary_id_2 = c.vocabulary_id
WHERE crs.concept_code_2 IS NOT NULL
AND (cs.concept_code, c.concept_id) not in (SELECT source_code, target_concept_id FROM icd_cde_source WHERE source_vocabulary_id = 'ICD10CM')
;

--Update 'mappings_origin' flag
UPDATE icd_cde_source s SET
mappings_origin = 'functions_updated'
WHERE for_review = '1'
AND valid_start_date in (SELECT DISTINCT GREATEST (d.lu_1, d.lu_2)
FROM (SELECT v1.latest_update AS lu_1, v2.latest_update AS lu_2
			FROM dev_icd10cm.concept_relationship_stage crs
			JOIN vocabulary v1 ON v1.vocabulary_id = crs.vocabulary_id_1
			JOIN vocabulary v2 ON v2.vocabulary_id = crs.vocabulary_id_2 WHERE crs.concept_code_2 IS NOT NULL) d)
OR valid_end_date in (SELECT DISTINCT GREATEST(crs.valid_start_date, (
				SELECT MAX(v.latest_update) - 1
				FROM vocabulary v
				WHERE v.vocabulary_id IN (
						crs.vocabulary_id_1,
						crs.vocabulary_id_2
					)
			)) FROM dev_icd10cm.concept_relationship_stage crs);


--Insertion of the potential replacement mappings and concepts without mappings
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT
source_code,
source_code_description,
source_vocabulary_id,
source_code_description as group_name,
relationship_id,
'1' as for_review,
target_concept_id,
target_concept_code,
target_concept_name,
target_concept_class_id,
target_standard_concept,
target_invalid_reason,
target_domain_id,
target_vocabulary_id,
rel_invalid_reason,
valid_start_date,
valid_end_date,
mappings_origin
FROM dev_icd10cm.icd10cm_refresh;

--ICD10GM with mappings (only manual mappings, conflicts and unique codes are inserted)
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT source_code,
       source_code_description,
       source_vocabulary_id,
       source_code_description,
       relationship_id,
       '1' as for_review,
       target_concept_id,
       target_concept_code,
       target_concept_name,
       target_concept_class_id,
       target_standard_concept,
       target_invalid_reason,
       target_domain_id,
       target_vocabulary_id,
       rel_invalid_reason,
       valid_start_date,
       valid_end_date,
       mappings_origin
FROM dev_icd10gm.icd10gm_refresh;

--CIM10 with mappings (only manual mappings, conflicts and unique codes are inserted)
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT source_code,
       source_code_description,
       source_vocabulary_id,
       source_code_description,
       relationship_id,
       '1' as for_review,
       target_concept_id,
       target_concept_code,
       target_concept_name,
       target_concept_class_id,
       target_standard_concept,
       target_invalid_reason,
       target_domain_id,
       target_vocabulary_id,
       rel_invalid_reason,
       valid_start_date,
       valid_end_date,
       mappings_origin
FROM dev_cim10.CIM10_refresh;

--ICD10CN with mappings (only manual mappings are inserted)
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT source_code,
       source_code_description,
       source_vocabulary_id,
       source_code_description,
       relationship_id,
       '1' as for_review,
       target_concept_id,
       target_concept_code,
       target_concept_name,
       target_concept_class_id,
       target_standard_concept,
       target_invalid_reason,
       target_domain_id,
       target_vocabulary_id,
       rel_invalid_reason,
       valid_start_date,
       valid_end_date,
       mappings_origin
FROM dev_icd10cn.icd10cn_refresh;;

--KCD7 with mappings (only manual mappings are inserted)
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT source_code,
       source_code_description,
       source_vocabulary_id,
       source_code_description,
       relationship_id,
       '1' as for_review,
       target_concept_id,
       target_concept_code,
       target_concept_name,
       target_concept_class_id,
       target_standard_concept,
       target_invalid_reason,
       target_domain_id,
       target_vocabulary_id,
       rel_invalid_reason,
       valid_start_date,
       valid_end_date,
       mappings_origin
FROM dev_kcd7.KCD7_refresh;

--ICD9CM with mappings
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            relationship_id,
                            --for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
-- Check Select before insertion
-- To insert mappings from concept_relationship_stage
SELECT cs.concept_code     as source_code,
       cs.concept_name     as source_code_description,
       'ICD9CM'             as source_vocabulary_id,
       cs.concept_name     as group_name,
       crs.relationship_id as relationship_id,
       --'1'                 as for_review,
       c.concept_id        as target_concept_id,
       crs.concept_code_2  as target_concept_code,
       c.concept_name      as target_concept_name,
       c.concept_class_id  as target_concept_class,
       c.standard_concept  as target_standard_concept,
       c.invalid_reason    as target_invalid_reason,
       c.domain_id         as target_domain_id,
       crs.vocabulary_id_2 as target_vocabulary_id,
       crs.invalid_reason  as rel_invalid_reason,
       crs.valid_start_date as valid_start_date,
       crs.valid_end_date  as valid_end_date,
       CASE WHEN c.concept_id is not null THEN 'crs' ELSE null END as mappings_origin
FROM dev_icd9cm.concept_stage cs
LEFT JOIN dev_icd9cm.concept_relationship_stage crs
    on cs.concept_code = crs.concept_code_1
    and crs.relationship_id in ('Maps to', 'Maps to value')
LEFT JOIN concept c
    on crs.concept_code_2 = c.concept_code
    and crs.vocabulary_id_2 = c.vocabulary_id
where (cs.concept_code, c.concept_id) not in (SELECT source_code, target_concept_id FROM icd_cde_source WHERE source_vocabulary_id = 'ICD9CM')
and crs.concept_code_2 IS NOT NULL;

--Update 'mappings_origin' flag
UPDATE icd_cde_source s SET
mappings_origin = 'functions_updated'
WHERE valid_start_date in (SELECT DISTINCT GREATEST (d.lu_1, d.lu_2)
FROM (SELECT v1.latest_update AS lu_1, v2.latest_update AS lu_2
			FROM dev_icd9cm.concept_relationship_stage crs
			JOIN vocabulary v1 ON v1.vocabulary_id = crs.vocabulary_id_1
			JOIN vocabulary v2 ON v2.vocabulary_id = crs.vocabulary_id_2) d)
OR valid_end_date in (SELECT DISTINCT GREATEST(crs.valid_start_date, (
				SELECT MAX(v.latest_update) - 1
				FROM vocabulary v
				WHERE v.vocabulary_id IN (
						crs.vocabulary_id_1,
						crs.vocabulary_id_2
					)
			)) FROM dev_icd9cm.concept_relationship_stage crs);

--Insertion of the potential replacement mappings and concepts without mappings
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT
source_code,
source_code_description,
source_vocabulary_id,
source_code_description as group_name,
relationship_id,
'1' as for_review,
target_concept_id,
target_concept_code,
target_concept_name,
target_concept_class_id,
target_standard_concept,
target_invalid_reason,
target_domain_id,
target_vocabulary_id,
rel_invalid_reason,
valid_start_date,
valid_end_date,
mappings_origin
FROM dev_icd9cm.icd9cm_refresh;

-- 5. Insert community contribution
-- TRUNCATE TABLE dev_icd10.icd_community_contribution;
CREATE TABLE dev_icd10.icd_community_contribution
(
    source_code             TEXT NOT NULL,
    source_code_description varchar,
    source_vocabulary_id    varchar,
    group_name              varchar,
    group_id                int,
    --group_code              varchar, -- group code is dynamic and is assembled after grouping just before insertion data into the google sheet
    medium_group_id         integer,
    --medium_group_code       varchar,
    broad_group_id          integer,
    --broad_group_code        varchar,
    for_review              varchar,
    relationship_id         varchar,
    target_concept_id       integer,
    target_concept_code     varchar,
    target_concept_name     varchar,
    target_concept_class_id varchar,
    target_standard_concept varchar,
    target_invalid_reason   varchar,
    target_domain_id        varchar,
    target_vocabulary_id    varchar,
    rel_invalid_reason      varchar,
    valid_start_date        date,
    valid_end_date          date,
    mappings_origin         varchar
);

INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            for_review,
                            relationship_id,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT s.source_code,
       s.source_code_description,
       s.source_vocabulary_id,
       s.source_code_description,
       '1' as for_review,
       s.relationship_id,
       c.concept_id as target_concept_id,
       c.concept_code as target_concept_code,
       c.concept_name as target_concept_name,
       c.concept_class_id as target_concept_class_id,
       c.standard_concept as  target_standard_concept,
       c.invalid_reason as target_invalid_reason,
       c.domain_id as target_domain_id,
       c.vocabulary_id as target_vocabulary_id,
       s.rel_invalid_reason,
       s.valid_start_date,
       s.valid_end_date,
       'CC' as mappings_origin
FROM dev_icd10.icd_community_contribution s
JOIN devv5.concept c on s.target_concept_id = c.concept_id;


--6. Insert mappings from external sources into the dev_icd10.icd_cde_source table
INSERT INTO icd_cde_source (source_code,
                            source_code_description,
                            source_vocabulary_id,
                            group_name,
                            --medium_group_id,
                            --broad_group_id,
                            relationship_id,
                            for_review,
                            target_concept_id,
                            target_concept_code,
                            target_concept_name,
                            target_concept_class_id,
                            target_standard_concept,
                            target_invalid_reason,
                            target_domain_id,
                            target_vocabulary_id,
                            rel_invalid_reason,
                            valid_start_date,
                            valid_end_date,
                            mappings_origin)
SELECT source_code as source_code,
       source_code_description as source_code_description,
       source_vocabulary_id as source_vocabulary_id,
       source_code_description as group_name,
       relationship_id as relationship_id,
       '1' as for_review,
       target_concept_id,
       target_concept_code,
       target_concept_name,
       target_concept_class_id,
       target_standard_concept,
       target_invalid_reason,
       target_domain_id,
       target_vocabulary_id,
       null as rel_invalid_reason,
       current_date as valid_start_date,
       '2099-12-31'::date as valid_end_date,
       mappings_origin
       FROM map_for_review;

--7. check all the inserted rows
SELECT * FROM icd_cde_source
ORDER BY source_code;

--8. check all the ICD10 concepts are in the CDE
SELECT *
FROM dev_icd10.concept_stage
WHERE (concept_code, concept_name) not in
(SELECT source_code, source_code_description FROM icd_cde_source
WHERE source_vocabulary_id = 'ICD10')
AND concept_class_id not in ('ICD10 Chapter','ICD10 SubChapter');

--9. check all the ICD10CM concepts are in the CDE
SELECT *
FROM dev_icd10cm.concept_stage
WHERE concept_code not in
(SELECT source_code FROM icd_cde_source
WHERE source_vocabulary_id = 'ICD10CM');

--10. Check for null values in source_code, source_code_description, source_vocabulary_id fields
SELECT * FROM icd_cde_source
    WHERE source_code is null
    OR source_code_description is null
    or source_vocabulary_id is null;

--11. Grouping
DROP TABLE grouped;
CREATE TABLE grouped as (
WITH RECURSIVE hierarchy_concepts
AS (
	SELECT c.ancestor_id AS root_source_code_description, --create virtual group by description
		c.ancestor_id,
		c.descendant_id,
		ARRAY [c.descendant_id] AS full_path
	FROM concepts c
	WHERE c.ancestor_id IN (
			--each code+target can have several descriptions, so to simplify the hierarchy, we take only one "minimum" description
			SELECT MIN(cr.source_code_description)
			FROM concepts_raw cr
			GROUP BY cr.source_code,
				cr.target_concept_code
			)

	UNION ALL

	SELECT hc.root_source_code_description,
		c.ancestor_id,
		c.descendant_id,
		hc.full_path || c.descendant_id AS full_path
	FROM concepts c
	JOIN hierarchy_concepts hc ON hc.descendant_id = c.ancestor_id
	WHERE c.descendant_id <> ALL (hc.full_path)
	),
concepts_raw AS (
    SELECT * FROM icd_cde_source),
concepts AS (
	/*the general idea is to "group" by description first, resulting in pairs
	name1->(code1,target1),(code2,target2), ...
	name2->(code2,target2),(code3,target3), ...
	... etc
	and then convert the code+target pair back into names so that we can build a hierarchy from the first name (name1/name2) to all other names of all pairs

	in this query we get "ancestor" (source_code_description) and all its "descendants" by code+target, but use their descriptions so that we can build a hierarchy by "source_code_description" field
	*/
	SELECT cr1.source_code_description AS ancestor_id,
		cr2.source_code_description AS descendant_id
	FROM concepts_raw cr1
	--get source_code_description instead of code+target
	--some pairs may be in a single copy - that's why LEFT JOIN
	LEFT JOIN concepts_raw cr2 ON cr2.source_code = cr1.source_code
		AND cr2.target_concept_code = cr1.target_concept_code
		AND cr1.source_code_description <> cr2.source_code_description
	),
groups AS (
	SELECT MIN(root_source_code_description) AS root_source_code_description, --in some cases, a concept may fall into several groups at once. we take only one. remember, this field is just an indicator (partition) of groups
		COALESCE(descendant_id, root_source_code_description) AS descendant_id
	FROM hierarchy_concepts hc
	GROUP BY COALESCE(descendant_id, root_source_code_description)
)
--now we're ready to make a real grouping
SELECT DENSE_RANK() OVER (ORDER BY g.root_source_code_description) AS strict_group_id,
	FIRST_VALUE(cr.source_code_description) OVER (
		PARTITION BY g.root_source_code_description ORDER BY CASE
				WHEN cr.source_vocabulary_id = 'ICD10'
					THEN 0
				ELSE 1
				END,
			LENGTH(cr.source_code_description) DESC,
			cr.source_code_description --in case different groups have the same length
		) AS strict_group_name,
	cr.*
FROM groups g
JOIN concepts_raw cr ON cr.source_code_description = g.descendant_id);

UPDATE icd_cde_source
SET group_id = strict_group_id, group_name = strict_group_name FROM grouped
WHERE icd_cde_source.source_code = grouped.source_code
AND icd_cde_source.source_code_description = grouped.source_code_description
AND icd_cde_source.source_vocabulary_id = grouped.source_vocabulary_id;

SELECT cde_groups.DetachConceptFromGroup('icd_cde_source', ARRAY['I85.0:ICD10CM', 'M10.28:ICD10CM', 'M10.38:ICD10CM', 'M20.3:ICD10CM', 'N10:ICD10CM', 'S27.80:ICD10CM','S67.0:ICD10CM',
    'S92.90:ICD10CM', 'J96.10:ICD10CM', 'G23.2:ICD10CM', 'H59.0:ICD10CM', 'I22.9:ICD10CM','I61.5:ICD10CM','M05.1:ICD10CM','M05.19:ICD10CM','R65.2:ICD10CM','S72.10:ICD10CM','Z85.21:ICD10CM',
    'Z85.810:ICD10CM','Z87.11:ICD10CM','A49.1:ICD10CM','B01.1:ICD10CM','E11.0:ICD10CM','F25.0:ICD10CM','F32.9:ICD10CM','F60.3:ICD10CM','F84.0:ICD10CM','F91.1:ICD10CM','F91.2:ICD10CM',
    'F98.5:ICD10CM','G31.0:ICD10CM','G44.0:ICD10CM', 'G44.3:ICD10CM','G80.3:ICD10CM','I13.1:ICD10CM','I61.6:ICD10CM','K05.2:ICD10CM','K29.0:ICD10CM','M06.00:ICD10CM','M06.32:ICD10CM',
    'M23.01:ICD10CM','M23.02:ICD10CM','M66.10:ICD10CM','M70.11:ICD10CM','N48.1:ICD10CM','Q91.3:ICD10CM','R63.6:ICD10CM','S68.0:ICD10CM','S68.1:ICD10CM','V29.2:ICD9CM','V47.0:ICD9CM',
    'A15.0:ICD10CM','A15.5:ICD10CM','A15.6:ICD10CM','I72.0:ICD10CM','I72.2:ICD10CM','I72.4:ICD10CM','I72.5:ICD10CM', 'I72.6:ICD10CM', 'I72.8:ICD10CM','I72.9:ICD10CM','M14.6:ICD10CM',
    '442.1:ICD9CM','442.3:ICD9CM', '442.9:ICD9CM','535.0:ICD9CM','590.1:ICD9CM','735.1:ICD9CM', '995.92:ICD9CM', '301.83:ICD9CM','333.71:ICD9CM','333.71:ICD9CM','339.22:ICD9CM',
    '442.9:ICD9CM','523.9:ICD9CM','640.81:ICD9CM','640.91:ICD9CM','647.54:ICD9CM','654.31:ICD9CM','664.90:ICD9CM','674.02:ICD9CM','675.02:ICD9CM','675.12:ICD9CM','675.22:ICD9CM',
    '676.22:ICD9CM','676.62:ICD9CM','719.25:ICD9CM','761.4:ICD9CM','774.31:ICD9CM','800.26:ICD9CM','299.0:ICD9CM','333.71:ICD9CM','339.2:ICD9CM','339.2:ICD9CM','F53.0:ICD10CM',
    'L03.0:ICD10CM','M05.39:ICD10CM','F10.9:ICD10CM','M70.12:ICD10CM','G56.4:ICD10','M23.51:ICD10','M23.52:ICD10','G31.0:ICD10','Q61.0:ICD10CM','M25.43:ICD10CM','S02.60:ICD10',
    'O91.0:ICD10','N44:ICD10CM','W83:ICD10','X91:ICD10','Y20:ICD10','M21.95:ICD10','K35.32:ICD10CM','J96.00:ICD10CM','J96.01:ICD10CM','M80.07:ICD10CM','M80.03:ICD10CM', 'M80.06:ICD10CM',
    'M80.01:ICD10CM', 'Z52.01:ICD10CM','J96.11:ICD10CM','O08:ICD10CM','S42.01:ICD10CM','S12.00:ICD10CM','S12.01:ICD10CM','S42.01:ICD10CM','S12.00:ICD10CM','S72.00:ICD10CM','S72.01:ICD10CM',
    'R75:ICD10CM','M24.02:ICD10CM','P52.4:ICD10','P52.6:ICD10', 'M71.10:ICD10CM', 'M08.80:ICD10', 'N13.7:ICD10CM', 'S63.5:ICD10CM', 'S63.6:ICD10CM', 'M19.92:ICD10CM', 'M62.81:ICD10CM',
    'M62.84:ICD10CM', 'M19.93:ICD10CM', 'T66:ICD10CM', 'D70:ICD10CM', 'N77.1:ICD10CM', 'I07.1:ICD10CM', 'L89.1:ICD10CM','L89.3:ICD10CM','L89.0:ICD10CM','L89.0:ICD10CM',
    'I05.0:ICD10CM','I07.9:ICD10CM','L89.0:ICD10CM','L89.1:ICD10CM','L89.2:ICD10CM','L89.3:ICD10CM', 'Z86.001:ICD10CM', 'Z86.001:ICD10CN', '288.0:ICD9CM']);

--12. Check every concept is represented in only one group
SELECT DISTINCT
source_code,
source_vocabulary_id,
COUNT (DISTINCT group_id)
FROM icd_cde_source
GROUP BY source_code, source_vocabulary_id --group_id,
HAVING COUNT (DISTINCT group_id) > 1;

--13. Check for group_name uniqueness
with names as (SELECT DISTINCT group_name FROM icd_cde_source)
SELECT DISTINCT group_name
FROM names
GROUP BY group_name
HAVING count(group_name) >1;

--14. Update for_review field (can be on different conditions during every refresh)

--For groups with external mappings sources
--UPDATE icd_cde_source SET for_review = '1'
--WHERE group_id in (
--    SELECT group_id FROM icd_cde_source
--    WHERE mappings_origin in ('SNOMED_eq', 'UMLS/NCIm')
--    );

--For groups with several concepts and several mapping sources
--UPDATE icd_cde_source SET for_review = '1'
--    WHERE group_id in (SELECT group_id FROM icd_cde_source
--GROUP BY group_id
--HAVING COUNT (DISTINCT (source_vocabulary_id, source_code)) >1)
--AND
--group_id in (SELECT group_id FROM icd_cde_source
--GROUP BY group_id
--HAVING COUNT (DISTINCT (mappings_origin)) > 1)

--For some codes from users
-- UPDATE icd_cde_source SET for_review = '1'
-- where (source_code, source_vocabulary_id, target_concept_id) in
--                                                                     (select source_code, source_vocabulary_id, target_concept_id
--                                                         from last_three_cc_table
--                                                         where (source_code, source_vocabulary_id, target_concept_id) not in
--                                                                     (
--                                                                     select source_code, source_vocabulary_id,target_concept_id
--                                                                     from dev_icd10.icd_cde_source
--                                                                      where decision = '1'));
--
-- select *
--     from icd_cde_source where for_review = '1';

UPDATE icd_cde_source SET for_review = null;

UPDATE icd_cde_source SET for_review = '1'
where source_vocabulary_id = 'ICD9CM'
        and
    source_code IN (
        '643.9'
)
;

select *
    from icd_cde_source where for_review = '1';


--For 'Maps to' Meas value
-- UPDATE icd_cde_source SET for_review = '1'
-- WHERE target_domain_id = 'Meas Value' and relationship_id = 'Maps to';
--
-- --For ICD10, ICD10CM codes without mapping
-- UPDATE icd_cde_source SET for_review = '1'
-- WHERE group_id in (
--     SELECT group_id FROM icd_cde_source
--         WHERE source_vocabulary_id in ('ICD10', 'ICD10CM') AND target_concept_id is NULL);
--
-- --For 'Concept poss_eq' to
-- UPDATE icd_cde_source SET for_review = '1'
-- WHERE group_id in (
--     SELECT group_id FROM icd_cde_source
--    WHERE mappings_origin = 'Concept poss_eq to');
--
-- --For concepts after checks
-- UPDATE icd_cde_source SET for_review = '1'
-- WHERE source_code in (SELECT DISTINCT source_code FROM to_check);

--15. Table for manual mapping and review creation -- data for the exact refresh
--DROP TABLE icd_cde_manual;
TRUNCATE TABLE icd_cde_manual;
CREATE TABLE icd_cde_manual
(
group_name varchar,
group_id int,
group_code varchar[],
medium_group_id int,
medium_group_code varchar,
broad_group_id int,
broad_group_code varchar,
mappings_origin varchar[],
for_review varchar,
relationship_id varchar,
relationship_id_predicate varchar,
decision varchar,
decision_date date,
comments varchar,
target_concept_id int,
target_concept_code varchar,
target_concept_name varchar,
target_concept_class_id varchar,
target_standard_concept varchar,
target_invalid_reason varchar,
target_domain_id varchar,
target_vocabulary_id varchar,
valid_start_date           date,
valid_end_date             date,
mapper_id varchar);

INSERT INTO icd_cde_manual (
group_name,
group_id,
group_code,
mappings_origin,
--for_review,
relationship_id,
--decision,
target_concept_id,
target_concept_code,
target_concept_name,
target_concept_class_id,
target_standard_concept,
target_invalid_reason,
target_domain_id,
target_vocabulary_id
--valid_start_date,
--valid_end_date
)

WITH code_agg as
    (SELECT group_id, (array_agg (DISTINCT CONCAT (source_vocabulary_id || ':' || source_code))) as group_code
    FROM icd_cde_source
    GROUP BY group_id
    ORDER BY group_id)
    -- map_or as
    --(SELECT group_id, string_agg (DISTINCT mappings_origin, ',') as mapping_origin
    --FROM icd_cde_source
    --GROUP BY group_id, target_concept_id
    --ORDER BY group_id)
SELECT DISTINCT
s.group_name,
s.group_id,
c.group_code,
(array_agg (DISTINCT s.mappings_origin)) as mappings_origin,
--s.for_review,
s.relationship_id,
--s.decision,
s.target_concept_id,
s.target_concept_code,
s.target_concept_name,
s.target_concept_class_id,
s.target_standard_concept,
s.target_invalid_reason,
s.target_domain_id,
s.target_vocabulary_id
--s.valid_start_date,
--s.valid_end_date
FROM icd_cde_source s
JOIN code_agg c ON s.group_id = c.group_id
--JOIN map_or m ON s.group_id = m.group_id
WHERE s.group_id in (
    SELECT group_id FROM icd_cde_source
    WHERE for_review = '1')
-- AND s.group_id not in (
--     SELECT group_id FROM icd_cde_source s
--     WHERE s.decision = '1')
-- --AND (target_invalid_reason is null
-- --AND target_standard_concept = 'S')
-- and source_code in ('I07.1','S62.21','S72.10','T82.21','T82.212','T82.212A','T82.212D','T82.213',
--                             'T82.213A','T82.213D','T82.218','T82.218A','T82.218D','T82.321','T82.321A',
--                             'T82.321D','T82.331','T82.331A','T82.331D','T82.391','T82.391A','T82.391D',
--                             'T85.11','T85.111','T85.111A','T85.111D','T85.112','T85.112A','T85.112D','T85.113',
--                             'T85.113A','T85.113D','T85.118','T85.118A','T85.118D','T85.12','T85.121','T85.121A',
--                             'T85.121D','T85.123','T85.123A','T85.123D','T85.128','T85.128A','T85.128D','T85.19',
--                             'T85.191','T85.191A','T85.191D','T85.192','T85.192A','T85.192D','T85.193','T85.193A',
--                             'T85.193D','T85.199','T85.199A','T85.199D')
-- OR target_concept_id is null
--AND s.group_id in
--(SELECT group_id FROM icd_cde_manual
--GROUP BY group_id
--    HAVING count (group_id)>1)
GROUP BY s.group_name,
         s.group_id,
         c.group_code,
         target_concept_id,
         --s.for_review,
         s.relationship_id,
         --s.decision,
         --s.for_review,
         s.target_concept_id,
         s.target_concept_code,
         s.target_concept_name,
         s.target_concept_class_id,
         s.target_standard_concept,
         s.target_invalid_reason,
         s.target_domain_id,
         s.target_vocabulary_id
--        s.valid_start_date,
--       s.valid_end_date
ORDER BY group_id desc
;

select *
    from icd_cde_manual;

DROP TABLE for_manual_review;
CREATE TABLE for_manual_review as (
SELECT
m.group_name,
m.group_id,
m.group_code,
m.medium_group_id,
m.medium_group_code,
m.broad_group_id,
m.broad_group_code,
m.mappings_origin,
m.for_review,
m.relationship_id,
m.relationship_id_predicate,
m.decision,
m.decision_date,
m.comments,
c.concept_id,
c.concept_code,
c.concept_name,
c.concept_class_id,
c.standard_concept,
c.invalid_reason,
c.domain_id,
c.vocabulary_id,
m.valid_start_date,
m.valid_end_date,
m.mapper_id
FROM icd_cde_manual m
LEFT JOIN concept c ON m.target_concept_id = c.concept_id
WHERE m.target_concept_code = concept_code
--AND c.standard_concept = 'S'
--AND c.invalid_reason is null

UNION

SELECT DISTINCT
m.group_name,
m.group_id,
m.group_code,
m.medium_group_id,
m.medium_group_code,
m.broad_group_id,
m.broad_group_code,
m.mappings_origin,
m.for_review,
m.relationship_id,
m.relationship_id_predicate,
m.decision,
m.decision_date,
m.comments,
c.concept_id,
c.concept_code,
c.concept_name,
c.concept_class_id,
c.standard_concept,
c.invalid_reason,
c.domain_id,
c.vocabulary_id,
m.valid_start_date,
m.valid_end_date,
m.mapper_id
FROM icd_cde_manual m
LEFT JOIN concept c ON m.target_concept_code = c.concept_code
WHERE m.target_concept_code IN (SELECT target_concept_code FROM icd_cde_manual m1 LEFT JOIN concept c1 ON m1.target_concept_id = c1.concept_id
    WHERE m.target_concept_code != concept_code)
AND c.standard_concept = 'S'
AND c.invalid_reason is null
AND mappings_origin = '{functions_updated}'

UNION

SELECT *
FROM icd_cde_manual
    WHERE mappings_origin = '{without mapping}'
    );

SELECT * FROM for_manual_review
         where mappings_origin not in ('{SNOMED_eq}')
         order by group_id; --3199

--USE only if updates in the google sheet table are needed
--Create new table with all necessary updates
DROP TABLE icd_cde_manual_updated;
TRUNCATE TABLE icd_cde_manual_updated;
CREATE TABLE icd_cde_manual_updated
(
group_name varchar,
group_id int,
group_code varchar[],
medium_group_id int,
medium_group_code varchar,
broad_group_id int,
broad_group_code varchar,
mappings_origin varchar[],
for_review varchar,
relationship_id varchar,
relationship_id_predicate varchar,
decision varchar,
decision_date date,
comments varchar,
target_concept_id int,
target_concept_code varchar,
target_concept_name varchar,
target_concept_class_id varchar,
target_standard_concept varchar,
target_invalid_reason varchar,
target_domain_id varchar,
target_vocabulary_id varchar,
valid_start_date           date,
valid_end_date             date,
mapper_id varchar);

INSERT INTO icd_cde_manual_updated (
group_name,
group_id,
group_code,
mappings_origin,
--for_review,
relationship_id,
--decision,
target_concept_id,
target_concept_code,
target_concept_name,
target_concept_class_id,
target_standard_concept,
target_invalid_reason,
target_domain_id,
target_vocabulary_id
--valid_start_date,
--valid_end_date
)

WITH code_agg as
    (SELECT group_id, (array_agg (DISTINCT CONCAT (source_vocabulary_id || ':' || source_code))) as group_code
    FROM icd_cde_source
    GROUP BY group_id
    ORDER BY group_id)
    -- map_or as
    --(SELECT group_id, string_agg (DISTINCT mappings_origin, ',') as mapping_origin
    --FROM icd_cde_source
    --GROUP BY group_id, target_concept_id
    --ORDER BY group_id)
SELECT DISTINCT
s.group_name,
s.group_id,
c.group_code,
(array_agg (DISTINCT s.mappings_origin)) as mappings_origin,
--s.for_review,
s.relationship_id,
--s.decision,
s.target_concept_id,
s.target_concept_code,
s.target_concept_name,
s.target_concept_class_id,
s.target_standard_concept,
s.target_invalid_reason,
s.target_domain_id,
s.target_vocabulary_id
--s.valid_start_date,
--s.valid_end_date
FROM icd_cde_source s
JOIN code_agg c ON s.group_id = c.group_id
--JOIN map_or m ON s.group_id = m.group_id
WHERE s.group_id in (
    SELECT group_id FROM icd_cde_source
    WHERE for_review = '1')
AND group_name NOT IN  (SELECT group_name FROM icd_cde_manual)
AND (s.group_id not in (
    SELECT group_id FROM icd_cde_source s
    WHERE s.decision = '1')
--AND (target_invalid_reason is null
--AND target_standard_concept = 'S')
OR target_concept_id is null)
--AND s.group_id in
--(SELECT group_id FROM icd_cde_manual
--GROUP BY group_id
--    HAVING count (group_id)>1)
GROUP BY s.group_name,
         s.group_id,
         c.group_code,
         target_concept_id,
         --s.for_review,
         s.relationship_id,
         --s.decision,
         --s.for_review,
         s.target_concept_id,
         s.target_concept_code,
         s.target_concept_name,
         s.target_concept_class_id,
         s.target_standard_concept,
         s.target_invalid_reason,
         s.target_domain_id,
         s.target_vocabulary_id
--        s.valid_start_date,
--       s.valid_end_date
ORDER BY group_id desc;

DROP TABLE for_manual_review_upd;
CREATE TABLE for_manual_review_upd as (
SELECT
m.group_name,
m.group_id,
m.group_code,
m.medium_group_id,
m.medium_group_code,
m.broad_group_id,
m.broad_group_code,
m.mappings_origin,
m.for_review,
m.relationship_id,
m.relationship_id_predicate,
m.decision,
m.decision_date,
m.comments,
c.concept_id,
c.concept_code,
c.concept_name,
c.concept_class_id,
c.standard_concept,
c.invalid_reason,
c.domain_id,
c.vocabulary_id,
m.valid_start_date,
m.valid_end_date,
m.mapper_id
FROM icd_cde_manual_updated m
LEFT JOIN concept c ON m.target_concept_id = c.concept_id
WHERE m.target_concept_code = concept_code
AND c.standard_concept = 'S'
AND c.invalid_reason is null

UNION

SELECT DISTINCT
m.group_name,
m.group_id,
m.group_code,
m.medium_group_id,
m.medium_group_code,
m.broad_group_id,
m.broad_group_code,
m.mappings_origin,
m.for_review,
m.relationship_id,
m.relationship_id_predicate,
m.decision,
m.decision_date,
m.comments,
c.concept_id,
c.concept_code,
c.concept_name,
c.concept_class_id,
c.standard_concept,
c.invalid_reason,
c.domain_id,
c.vocabulary_id,
m.valid_start_date,
m.valid_end_date,
m.mapper_id
FROM icd_cde_manual_updated m
LEFT JOIN concept c ON m.target_concept_code = c.concept_code
WHERE m.target_concept_code IN (SELECT target_concept_code FROM icd_cde_manual m1 LEFT JOIN concept c1 ON m1.target_concept_id = c1.concept_id
    WHERE m.target_concept_code != concept_code)
AND c.standard_concept = 'S'
AND c.invalid_reason is null
AND mappings_origin = '{functions_updated}'

UNION

SELECT *
FROM icd_cde_manual_updated
    WHERE mappings_origin = '{without mapping}'
    );

SELECT * FROM for_manual_review_upd;

----Create current manual table and upload current state of google sheet
--CREATE TABLE icd_cde_manual_current
--(
--group_name varchar,
--group_id int,
--group_code varchar,
--medium_group_id int,
--medium_group_code varchar,
--broad_group_id int,
--broad_group_code varchar,
--mappings_origin varchar,
--for_review varchar,
--relationship_id varchar,
--relationship_id_predicate varchar,
--decision int,
--decision_date date,
--comments varchar,
--target_concept_id int,
--target_concept_code varchar,
--target_concept_name varchar,
--target_concept_class_id varchar,
--target_standard_concept varchar,
--target_invalid_reason varchar,
--target_domain_id varchar,
--target_vocabulary_id varchar,
--mapper_id varchar);
--
----Select data to reload into the google sheet
--SELECT DISTINCT
--u.group_name as group_name,
--u.group_id as group_id,
--u.group_code as group_code,
--null as medium_group_id,
--null as medium_group_code,
--null as broad_group_id,
--null as broad_group_code,
--c.mappings_origin as mappings_origin,
--u.for_review as for_review,
--c.relationship_id as relationship_id,
--c.relationship_id_predicate as relationship_id_predicate,
--c.decision as decision,
--c.decision_date as decision_date,
--c.comments as comments,
--c.target_concept_id as target_concept_id,
--c.target_concept_code as target_concept_code,
--c.target_concept_name as target_concept_name,
--c.target_concept_class_id as target_concept_class,
--c.target_standard_concept as target_standard_concept,
--c.target_invalid_reason as target_invalid_reason,
--c.target_domain_id as target_domain_id,
--c.target_vocabulary_id as target_vocabulary_id,
--c.mapper_id as mapper_id
--FROM icd_cde_manual_updated u
--JOIN icd_cde_manual_current c
--ON u.group_name = c.group_name
--
--UNION
--
--SELECT DISTINCT
--u.group_name as group_name,
--u.group_id as group_id,
--u.group_code as group_code,
--null as medium_group_id,
--null as medium_group_code,
--null as broad_group_id,
--null as broad_group_code,
--u.mappings_origin as mapping_origin,
--u.for_review as for_review,
--u.relationship_id as relationship_id,
--u.relationship_id_predicate as relationship_id_predicate,
--u.decision as decision,
--u.decision_date as decision_date,
--u.comments as comments,
--u.target_concept_id as target_concept_id,
--u.target_concept_code as target_concept_code,
--u.target_concept_name as target_concept_name,
--u.target_concept_class_id as target_concept_class_id,
--u.target_standard_concept as target_standard_concept,
--u.target_invalid_reason as target_invalid_reason,
--u.target_domain_id as target_domain_id,
--u.target_vocabulary_id as target_vocabulary_id,
--u.mapper_id as mapper_id
--FROM icd_cde_manual_updated u
--WHERE (u.group_name, u.target_concept_id)
--NOT IN (SELECT group_name, target_concept_id  FROM icd_cde_manual_current)
--ORDER BY group_name;


--16. Create mapped table
DROP TABLE icd_cde_mapped;
--TRUNCATE TABLE icd_cde_mapped;
--CREATE TABLE icd_cde_mapped_feb_back_30_7 AS SELECT * FROM icd_cde_mapped;
--CREATE TABLE icd_cde_mapped_feb_back_8_28_2024 AS SELECT * FROM icd_cde_mapped;
CREATE TABLE icd_cde_mapped
(
group_name varchar,
group_id int,
group_code varchar [],
medium_group_id int,
medium_group_code varchar,
broad_group_id int,
broad_group_code varchar,
mappings_origin varchar,
for_review varchar,
relationship_id varchar,
relationship_id_predicate varchar,
decision int,
decision_date date,
comments varchar,
target_concept_id bigint,
target_concept_code varchar,
target_concept_name varchar,
target_concept_class_id varchar,
target_standard_concept varchar,
target_invalid_reason varchar,
target_domain_id varchar,
target_vocabulary_id varchar,
mapper_id text,
rev_id text,
rel_invalid_reason varchar,
valid_start_date  date,
valid_end_date  date);


--- see first rows
select *
    from icd_cde_mapped;

--- see last 5 rows
SELECT *
FROM icd_cde_mapped
OFFSET (SELECT COUNT(*) - 5 FROM icd_cde_mapped)
LIMIT 5;

-- Solving problem of not correct source_code
Drop table icd_cde_mapped_corr;
create table icd_cde_mapped_corr as
select
        t1.group_name,
        t1.group_id,
        t1.group_code,
        t1.medium_group_id,
        t1.medium_group_code,
        t1.broad_group_id,
        t1.broad_group_code,
        t1.mappings_origin,
        t1.for_review,
        t1.relationship_id,
        t1.relationship_id_predicate,
        t1.decision,
        t1.decision_date,
        t1.comments,
        t1.target_concept_id,
        t2.concept_code as target_concept_code,
        t1.target_concept_name,
        t1.target_concept_class_id,
        t1.target_standard_concept,
        t1.target_invalid_reason,
        t1.target_domain_id,
        t1.target_vocabulary_id,
        t1.mapper_id,
        t1.rev_id,
        t1.rel_invalid_reason,
        t1.valid_start_date,
        t1.valid_end_date
    from icd_cde_mapped t1
    join devv5.concept t2 on t1.target_concept_id = t2.concept_id
                                and t2.invalid_reason is null;

select * from icd_cde_mapped_corr;
drop table icd_cde_mapped;
create table icd_cde_mapped as select * from icd_cde_mapped_corr;

--Update mapper and reviewer fields
DELETE FROM icd_cde_mapped WHERE group_code is null;
UPDATE icd_cde_mapped SET mapper_id = 'TO' WHERE mapper_id = 'Mapper: tetiana_orlova@epam.com';
UPDATE icd_cde_mapped SET mapper_id = 'JC' WHERE mapper_id = 'Mapper: janice-pilar_cruz@epam.com';
UPDATE icd_cde_mapped SET mapper_id = 'MK' WHERE mapper_id = 'Mapper: maria_khitrun@epam.com';
UPDATE icd_cde_mapped SET mapper_id = 'MS' WHERE mapper_id = 'Mapper: mikita_salavei@epam.com';
UPDATE icd_cde_mapped SET mapper_id = 'AT' WHERE mapper_id = 'Mapper: anton_tatur1@epam.com';
UPDATE icd_cde_mapped SET mapper_id = 'AY' WHERE mapper_id = 'Mapper: aliaksandr_yurchanka3@epam.com';
UPDATE icd_cde_mapped SET rev_id = 'MK' WHERE rev_id = 'Reviewer: maria_khitrun@epam.com';
UPDATE icd_cde_mapped SET rev_id = 'TO' WHERE rev_id = 'Reviewer: tetiana_orlova@epam.com';
UPDATE icd_cde_mapped SET rev_id = 'JC' WHERE rev_id = 'Reviewer: janice-pilar_cruz@epam.com';
UPDATE icd_cde_mapped SET rev_id = 'MS' WHERE rev_id = 'Reviewer: mikita_salavei@epam.com';
UPDATE icd_cde_mapped SET rev_id = 'AT' WHERE rev_id = 'Reviewer: anton_tatur1@epam.com';
UPDATE icd_cde_mapped SET rev_id = 'AY' WHERE rev_id = 'Reviewer: aliaksandr_yurchanka3@epam.com';
UPDATE icd_cde_mapped SET rev_id = null WHERE rev_id = 'Reviewer: 0';

--17. Update mapped table
--Update decision flag --miss null!
UPDATE icd_cde_mapped SET decision = '0'
WHERE decision is null;

--Update target_standard_concept field
UPDATE icd_cde_mapped SET target_standard_concept = 'S'
WHERE target_standard_concept = 'Standard';

--Update target_invalid_reason field
UPDATE icd_cde_mapped SET target_invalid_reason = NULL
WHERE target_invalid_reason = 'Valid';

--Update rel_invalid_reason, valid_start_date, valid_end_date fields for declined candidates
UPDATE icd_cde_mapped SET
decision_date = '2025-01-31'
WHERE decision in ('0', '1');

UPDATE icd_cde_mapped SET
valid_start_date = '2025-01-31',
valid_end_date = '2099-12-31'
WHERE decision = '1'
AND  (mappings_origin = '{without mapping}'
    OR mappings_origin = '{manual}');

select * from icd_cde_mapped;

--18. Create final table with mappings
--CREATE TABLE icd_cde_proc_backup_26_7_2024 as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_28_8_2024 as (SELECT * FROM icd_cde_proc);
-- CREATE TABLE icd_cde_proc_backup_30_1_2025 as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_02_03_2025_before_CC_updt as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_02_03_2025_CC_updt as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_02_03_2025_CC_union_with_mapping as (SELECT * FROM icd_cde_proc);
-- CREATE TABLE icd_cde_proc_backup_02_03_2025_CC_union_with_mapping_union_w_lost as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_02_03_2025_mashas_lost as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_02_03_2025_part4 as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_02_03_2025_part4_part5 as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_02_03_2025_part5 as (SELECT * FROM icd_cde_proc);
--CREATE TABLE icd_cde_proc_backup_07_02_2025 as (SELECT * FROM icd_cde_proc);
--TRUNCATE TABLE icd_cde_proc;


select * from icd_cde_mapped
    where group_id is null;

DROP TABLE icd_cde_proc;

CREATE TABLE icd_cde_proc (
    source_code varchar,
    source_code_description varchar,
    source_vocabulary_id varchar,
    relationship_id varchar,
    relationship_id_predicate varchar,
    target_concept_id int,
    target_concept_code varchar,
    target_concept_name varchar,
    target_concept_class_id varchar,
    target_standard_concept varchar,
    target_invalid_reason varchar,
    target_domain_id varchar,
    target_vocabulary_id varchar,
    mapper varchar,
    reviewer varchar
);


INSERT INTO icd_cde_proc (source_code,
                          source_code_description,
                          source_vocabulary_id,
                          relationship_id,
                          relationship_id_predicate,
                          target_concept_id,
                          target_concept_code,
                          target_concept_name,
                          target_concept_class_id,
                          target_standard_concept,
                          target_invalid_reason,
                          target_domain_id,
                          target_vocabulary_id,
                          mapper,
                          reviewer)
SELECT DISTINCT
s.source_code as source_code,
s.source_code_description as source_code_description,
s.source_vocabulary_id as source_vocabulary_id,
m.relationship_id as relationship_id,
m.relationship_id_predicate as relationship_id_predicate,
m.target_concept_id,
m.target_concept_code,
m.target_concept_name,
m.target_concept_class_id,
m.target_standard_concept,
m.target_invalid_reason,
m.target_domain_id,
m.target_vocabulary_id,
m.mapper_id,
m.rev_id
FROM icd_cde_source s JOIN icd_cde_mapped m
ON s.group_name = m.group_name
AND m.decision = '1'
;

select *
from icd_cde_proc
where source_code = 'I07.1';

-- --TRUNCATE icd_cde_proc;
-- --- not correct source code
-- drop table icd_cde_proc_corr;
-- create table icd_cde_proc_corr as
-- select
--     t1.source_code,
--     t1.source_code_description,
--     t1.source_vocabulary_id,
--     t1.relationship_id,
--     t1.relationship_id_predicate ,
--     t1.target_concept_id,
--     t2.concept_code as target_concept_code,
--     t1.target_concept_name,
--     t1.target_concept_class_id,
--     t1.target_standard_concept,
--     t1.target_invalid_reason,
--     t1.target_domain_id,
--     t1.target_vocabulary_id,
--     t1.mapper,
--     t1.reviewer
--     from icd_cde_proc t1
--             join devv5.concept t2 on t1.target_concept_id = t2.concept_id;

-- drop table icd_cde_proc;
-- create table icd_cde_proc as select * from icd_cde_proc_corr;


select * from icd_cde_proc;


--INSERT INTO icd_cde_proc (source_code,
--                          source_code_description,
--                          source_vocabulary_id,
--                          relationship_id,
--                          relationship_id_predicate,
--                          target_concept_id,
--                          target_concept_code,
--                          target_concept_name,
--                          target_concept_class_id,
--                          target_standard_concept,
--                          target_invalid_reason,
--                          target_domain_id,
--                          target_vocabulary_id)
--SELECT DISTINCT
--s.source_code as source_code,
--s.source_code_description as source_code_description,
--s.source_vocabulary_id as source_vocabulary_id,
--m.relationship_id as relationship_id,
--m.relationship_id_predicate as relationship_id_predicate,
--m.target_concept_id,
--m.target_concept_code,
--m.target_concept_name,
--m.target_concept_class_id,
--m.target_standard_concept,
--m.target_invalid_reason,
--m.target_domain_id,
--m.target_vocabulary_id
--FROM icd_cde_source s JOIN icd_cde_ext_sources m
--ON s.group_name = m.group_name
--and m.decision = '1'
--WHERE m.group_name not in (SELECT DISTINCT group_name FROM icd_cde_mapped);

--19. Update targets status in the initial table from mapped table
-- 19.1. Update mappings for those without mapping
UPDATE dev_icd10.icd_cde_source s
SET mappings_origin = 'manual',
    decision = 1,
    decision_date = m.decision_date,
    relationship_id = m.relationship_id,
    rel_invalid_reason = m.rel_invalid_reason,
    valid_start_date = m.valid_start_date,
    valid_end_date = m.valid_end_date,
    target_concept_id = m.target_concept_id::int,
    target_concept_code = m.target_concept_code,
    target_concept_name = m.target_concept_name,
    target_concept_class_id = m.target_concept_class_id,
    target_standard_concept = m.target_standard_concept,
    target_invalid_reason = m.target_invalid_reason,
    target_domain_id = m.target_domain_id,
    target_vocabulary_id = m.target_vocabulary_id
    FROM dev_icd10.icd_cde_mapped m
WHERE s.mappings_origin = 'without mapping'
  AND m.mappings_origin = 'without mapping'
  AND s.group_name = m.group_name
  AND (SELECT COUNT(1)
         FROM dev_icd10.icd_cde_mapped
        WHERE group_name = m.group_name
          AND mappings_origin = 'without mapping') = 1;

INSERT INTO dev_icd10.icd_cde_source (
    source_code,
    source_code_description,
    source_vocabulary_id,
    group_name,
    group_id,
    medium_group_id,
    broad_group_id,
    for_review,
    decision,
    decision_date,
    relationship_id,
    relationship_id_predicate,
    target_concept_id,
    target_concept_code,
    target_concept_name,
    target_concept_class_id,
    target_standard_concept,
    target_invalid_reason,
    target_domain_id,
    target_vocabulary_id,
    rel_invalid_reason,
    valid_start_date,
    valid_end_date,
    mappings_origin
)
SELECT
    s.source_code,
    s.source_code_description,
    s.source_vocabulary_id,
    m.group_name,
    m.group_id,
    s.medium_group_id,
    s.broad_group_id,
    s.for_review,
    1,
    m.decision_date,
    m.relationship_id,
    m.relationship_id_predicate,
    m.target_concept_id :: int,
    m.target_concept_code,
    m.target_concept_name,
    m.target_concept_class_id,
    m.target_standard_concept,
    m.target_invalid_reason,
    m.target_domain_id,
    m.target_vocabulary_id,
    m.rel_invalid_reason,
    m.valid_start_date,
    m.valid_end_date,
    'manual'
FROM dev_icd10.icd_cde_source s
CROSS JOIN dev_icd10.icd_cde_mapped m
WHERE s.mappings_origin = 'without mapping'
AND m.mappings_origin = 'without mapping'
AND s.group_name = m.group_name
AND (SELECT COUNT(1)
       FROM dev_icd10.icd_cde_mapped
      WHERE group_name = m.group_name
        AND mappings_origin = 'without mapping') > 1;

-- delete records with mappings_origin = 'without mapping'
DELETE FROM dev_icd10.icd_cde_source s
 WHERE mappings_origin = 'without mapping'
   AND (SELECT COUNT(1)
          FROM dev_icd10.icd_cde_mapped
         WHERE group_name = s.group_name
           AND mappings_origin = 'without mapping') > 1;

-- 19.2.Add mapping candidates that were added manually and decided mapping candidates for all group members
INSERT INTO icd_cde_source(
    source_code,
    source_code_description,
    source_vocabulary_id,
    group_name,
    --group_id,
    medium_group_id,
    broad_group_id,
    for_review,
    decision,
    decision_date,
    relationship_id,
    relationship_id_predicate,
    target_concept_id,
    target_concept_code,
    target_concept_name,
    target_concept_class_id,
    target_standard_concept,
    target_invalid_reason,
    target_domain_id,
    target_vocabulary_id,
    rel_invalid_reason,
    valid_start_date,
    valid_end_date,
    mappings_origin
)
SELECT DISTINCT sr.source_code,
        sr.source_code_description,
        sr.source_vocabulary_id,
        m.group_name,
        --s.group_id,
        m.medium_group_id,
        m.broad_group_id,
        m.for_review,
        CASE WHEN sr.source_code_description = sr.group_name
             THEN 1
             ELSE NULL
        END AS decision,
        CASE WHEN sr.source_code_description = sr.group_name
             THEN m.decision_date
             ELSE NULL
        END AS decision_date,
        m.relationship_id,
        m.relationship_id_predicate,
        m.target_concept_id :: int,
        m.target_concept_code,
        m.target_concept_name,
        m.target_concept_class_id,
        m.target_standard_concept,
        m.target_invalid_reason,
        m.target_domain_id,
        m.target_vocabulary_id,
        m.rel_invalid_reason,
        CASE WHEN m.mappings_origin = 'manual' THEN m.valid_start_date ELSE sr.valid_start_date END as valid_start_date,
        CASE WHEN m.mappings_origin = 'manual' THEN m.valid_end_date ELSE sr.valid_end_date END as valid_end_date,
        m.mappings_origin
FROM dev_icd10.icd_cde_mapped m
JOIN (SELECT DISTINCT s.source_code_description, s.group_name, s.source_code, s.source_vocabulary_id, s.valid_start_date, s.valid_end_date
        FROM dev_icd10.icd_cde_source s) sr ON m.group_name = sr.group_name
WHERE m.decision = 1
--AND m.group_id = 39774
AND (m.mappings_origin = 'manual' OR NOT EXISTS (
        SELECT 1 FROM dev_icd10.icd_cde_source AS src
        WHERE src.group_name = m.group_name
          AND src.source_code = sr.source_code
          AND src.source_vocabulary_id = sr.source_vocabulary_id
          AND src.target_concept_id = m.target_concept_id::int
    ));

--SET decision = 1 for mapping candidates from _mapped
WITH rec_for_source as(
    SELECT DISTINCT sr.source_code,
                      sr.source_code_description,
                      sr.source_vocabulary_id,
                      m.target_concept_id::int,
                      m.decision_date
    FROM dev_icd10.icd_cde_mapped m
    JOIN (SELECT DISTINCT s.source_code_description,
                            s.group_name,
                            s.source_code,
                            s.source_vocabulary_id,
                            s.target_concept_id
            FROM dev_icd10.icd_cde_source s) sr ON m.group_name = sr.group_name AND
                                                   m.target_concept_id::int = sr.target_concept_id::int
    WHERE m.decision = 1
      --AND m.group_id = 39774
)
UPDATE dev_icd10.icd_cde_source t SET
    decision = CASE WHEN t.source_code_description = t.group_name
                         THEN 1
                         ELSE NULL
                    END,
    decision_date = CASE WHEN t.source_code_description = t.group_name
                             THEN rs.decision_date
                             ELSE NULL
                        END
    --valid_start_date = rs.decision_date
FROM rec_for_source rs
WHERE  t.source_code = rs.source_code AND
       t.source_code_description = rs.source_code_description AND
       t.source_vocabulary_id = rs.source_vocabulary_id AND
       t.target_concept_id::int = rs.target_concept_id::int;

--SET decision = 0 for mapping candidates with preexisting decision = 1, for which the status was revised
WITH rec_for_source as(
    SELECT DISTINCT sr.source_code,
                      sr.source_code_description,
                      sr.source_vocabulary_id,
                      m.target_concept_id::int,
                      m.decision_date
    FROM dev_icd10.icd_cde_mapped m
    JOIN (SELECT DISTINCT s.source_code_description,
                            s.group_name,
                            s.source_code,
                            s.source_vocabulary_id,
                            s.target_concept_id
            FROM dev_icd10.icd_cde_source s) sr ON m.group_name = sr.group_name AND
                                                   m.target_concept_id::int = sr.target_concept_id::int
    WHERE m.decision = 1
      --AND m.group_id = 39774
)
--SELECT * FROM icd_cde_source s
UPDATE dev_icd10.icd_cde_source s SET
    decision = NULL,
    decision_date = NULL,
    relationship_id_predicate = NULL
WHERE (s.source_code, s.source_vocabulary_id) in (SELECT source_code, source_vocabulary_id FROM rec_for_source)
AND (s.source_code, s.source_vocabulary_id, s.target_concept_id) NOT IN (SELECT source_code, source_vocabulary_id, target_concept_id FROM rec_for_source)
AND decision = '1';

-- 19.3 Add concepts, which are not represented in the initial table
INSERT INTO icd_cde_source
(
    source_code,
    source_code_description,
    source_vocabulary_id,
    group_name,
    --group_id,
    decision,
    decision_date,
    relationship_id,
    relationship_id_predicate,
    target_concept_id,
    target_concept_code,
    target_concept_name,
    target_concept_class_id,
    target_standard_concept,
    target_invalid_reason,
    target_domain_id,
    target_vocabulary_id,
    rel_invalid_reason,
    valid_start_date,
    valid_end_date,
    mappings_origin
)
with concepts as (
    SELECT group_name as group_name,
           unnest (group_code) as group_code
    FROM icd_cde_mapped WHERE group_name not in (SELECT group_name FROM icd_cde_source)
)
SELECT DISTINCT
      split_part(c.group_code, ':', 2) as source_code,
       c.group_name as source_code_description,
       split_part(c.group_code, ':', 1) as source_vocabulary_id,
       c.group_name as group_name,
       --m.group_id as group_id,
       m.decision,
       m.decision_date,
       m.relationship_id,
       m.relationship_id_predicate,
       m.target_concept_id::int,
       m.target_concept_code,
       m.target_concept_name,
       m.target_concept_class_id,
       m.target_standard_concept,
       m.target_invalid_reason,
       m.target_domain_id,
       m.target_vocabulary_id,
       m.rel_invalid_reason,
       m.valid_start_date,
       m.valid_end_date,
       m.mappings_origin
FROM concepts c LEFT JOIN icd_cde_mapped m ON c.group_name = m.group_name;

-- 20. Apply data from the patch table (used for small fixes through ULS)
-- 20.1. Create table for fast fixes data
DROP TABLE icd_fix;
CREATE TABLE icd_fix (
    source_code text,
    source_code_description text,
    source_vocabulary_id text,
    relationship_id text,
    relationship_id_predicate text,
    mapping_origin text,
    decision text,
    decision_date date,
    target_concept_id int,
    target_concept_code text,
    target_concept_name text,
    target_concept_class_id text,
    target_standard_concept text,
    target_invalid_reason text,
    target_domain_id text,
    target_vocabulary_id text,
    invalid_reason text,
    valid_start_date date,
    valid_end_date date
);

-- 20.2. Update the table
DELETE FROM icd_fix WHERE invalid_reason = 'D';
UPDATE icd_fix SET invalid_reason = NULL WHERE invalid_reason = 'X';

--Update target_standard_concept field
UPDATE icd_fix SET target_standard_concept = 'S'
WHERE target_standard_concept = 'Standard';

--Update target_invalid_reason field
UPDATE icd_fix SET target_invalid_reason = NULL
WHERE target_invalid_reason = 'Valid';

-- 20.3. Create table with group_names to update the icd_cde_source table
DROP TABLE icd_fix_mapped;
CREATE TABLE icd_fix_mapped
AS SELECT DISTINCT f.*, s.group_name
    FROM icd_fix f JOIN icd_cde_source s
    ON f.source_code = s.source_code AND f.source_vocabulary_id = s.source_vocabulary_id;

-- 20.4. Add mapping candidates that were added manually and decided mapping candidates for all group members
INSERT INTO icd_cde_source(
    source_code,
    source_code_description,
    source_vocabulary_id,
    group_name,
    --group_id,
    --medium_group_id,
    --broad_group_id,
    --for_review,
    decision,
    decision_date,
    relationship_id,
    relationship_id_predicate,
    target_concept_id,
    target_concept_code,
    target_concept_name,
    target_concept_class_id,
    target_standard_concept,
    target_invalid_reason,
    target_domain_id,
    target_vocabulary_id,
    rel_invalid_reason,
    valid_start_date,
    valid_end_date,
    mappings_origin
)
SELECT DISTINCT m.source_code,
        m.source_code_description,
        m.source_vocabulary_id,
        m.group_name,
        --s.group_id,
        --m.medium_group_id,
        --m.broad_group_id,
        --m.for_review,
        m.decision,
        m.decision_date,
        m.relationship_id,
        m.relationship_id_predicate,
        m.target_concept_id :: int,
        m.target_concept_code,
        m.target_concept_name,
        m.target_concept_class_id,
        m.target_standard_concept,
        m.target_invalid_reason,
        m.target_domain_id,
        m.target_vocabulary_id,
        m.invalid_reason,
        m.valid_start_date,
        m.valid_end_date,
        m.mapping_origin
FROM dev_icd10.icd_fix_mapped m
JOIN (SELECT DISTINCT s.source_code_description, s.group_name, s.source_code, s.source_vocabulary_id, s.valid_start_date, s.valid_end_date
        FROM dev_icd10.icd_cde_source s) sr ON m.group_name = sr.group_name
WHERE NOT EXISTS (
        SELECT 1 FROM dev_icd10.icd_cde_source AS src
        WHERE src.source_code = sr.source_code
          AND src.source_vocabulary_id = sr.source_vocabulary_id
          AND src.target_concept_id = m.target_concept_id::int
    );

-- 20.5. SET decision = 1 for mapping candidates from icd_fix
WITH rec_for_source as(
    SELECT DISTINCT sr.source_code,
                      sr.source_code_description,
                      sr.source_vocabulary_id,
                      m.target_concept_id::int,
                      m.decision_date
    FROM dev_icd10.icd_fix_mapped m
    JOIN (SELECT DISTINCT s.source_code_description,
                            s.group_name,
                            s.source_code,
                            s.source_vocabulary_id,
                            s.target_concept_id::int
            FROM dev_icd10.icd_cde_source s) sr ON m.source_code = sr.source_code AND
                                                   m.source_vocabulary_id = sr.source_vocabulary_id AND
                                                   m.target_concept_id::int = sr.target_concept_id::int
    --WHERE m.decision = '1'
      --AND m.group_id = 39774
)
UPDATE dev_icd10.icd_cde_source t SET
    decision = '1',
    decision_date = rs.decision_date
    --valid_start_date = rs.decision_date
FROM rec_for_source rs
WHERE  t.source_code = rs.source_code AND
       t.source_code_description = rs.source_code_description AND
       t.source_vocabulary_id = rs.source_vocabulary_id AND
       t.target_concept_id::int = rs.target_concept_id::int;

-- 20.6. SET decision = 0 for mapping candidates with preexisting decision = 1, for which the status was revised
WITH rec_for_source as(
    SELECT DISTINCT mr.source_code,
                      --sr.source_code_description,
                    mr.source_vocabulary_id,
                    mr.target_concept_id,
                    sr.target_concept_id
                     -- m.decision_date
    FROM dev_icd10.icd_fix_mapped mr
    JOIN dev_icd10.icd_cde_source sr
    ON mr.source_code = sr.source_code
    AND mr.source_vocabulary_id = sr.source_vocabulary_id
    AND mr.target_concept_id::int != sr.target_concept_id::int
    WHERE sr.decision = '1'
)
--SELECT * FROM icd_cde_source s
UPDATE dev_icd10.icd_cde_source s SET
    decision = NULL,
    decision_date = NULL,
    relationship_id_predicate = NULL
WHERE (s.source_code, s.source_vocabulary_id) in (SELECT source_code, source_vocabulary_id FROM rec_for_source)
AND (s.source_code, s.source_vocabulary_id, s.target_concept_id) NOT IN (SELECT source_code, source_vocabulary_id, target_concept_id FROM icd_fix_mapped)
AND decision = '1';